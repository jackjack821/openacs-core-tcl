<sect1 id="nextsteps" xreflabel="Next Steps">
  <title>Next Steps</title>

  <authorblurb>
    by <ulink url="mailto:vinod@kurup.com">Vinod Kurup</ulink>
  </authorblurb>

  <sect2 id="install-next-backups">
    <title>Backup Strategy</title>

    <para>

      Here are some tips from Don Baccus regarding backup strategy:

    </para>

    <para>

      The need for making backups should be self-explanatory. There are
      several strategies you can use. My own strategy for minimizing the
      odds that I'll lose all my data is quite simple:

    </para>

    <itemizedlist>
      <listitem><para>
          The database is stored on a mirrored (RAID 1) disk.
        </para></listitem>

      <listitem><para>
          The machine has battery backup.
        </para></listitem>

      <listitem><para>
          Backups are made nightly onto a third disk on another controller
        </para></listitem>

      <listitem><para>
          FTP is used to copy the resulting backup to two separate remote
          servers in two locations
        </para></listitem>
      </itemizedlist>

    <para>

      Rather than making remote copies, you might choose to dump to tape or
      writeable CD media. Whatever strategy you use, it is important to
      routinely check dumps to make sure they can be reloaded. The strategy
      outlined above means that in the case of catastrophic failure, I'll
      lose at most one day's data.

    </para>

    <para>

      By mirroring disks and using a battery backup, preferably one that
      can trigger an automatic and controlled shutdown of the system when
      the battery runs low, you greatly lower the odds of ever having to
      use your nightly backup. Despite this, it is important to take
      backups seriously if the data stored at your site is valuable to you
      or your users.

    </para>
  </sect2>

  <sect2 id="install-export-oracle">
    <title>Set Up Nightly Oracle Exports</title>

    <para>
      While you&#39;re working with Oracle, you should configure it to do
      automatic exports. An export is a separate backup copy of the
      database.  This copy includes all of the database&#39;s state at the
      time that the export was initiated. If your database is corrupted,
      you can restore from one of these backups. You should do this step as
      <computeroutput>root</computeroutput>.
    </para>

    <itemizedlist>
      <listitem><para> 
          Download the backup script. Save the file <ulink
          url="files/export-oracle.txt">export-oracle.txt</ulink> as
          <computeroutput>/tmp/export-oracle.txt</computeroutput>
        </para></listitem>

      <listitem><para>
          Login as root. The following commands will install the export script:
        </para> 
        <programlisting>
joeuser:~$ su -
Password: ***********
root:~# cp /tmp/export-oracle.txt /usr/sbin/export-oracle
root:~# chmod 700 /usr/sbin/export-oracle</programlisting>
      </listitem>

      <listitem><para>
        Setup the export directory; this is the directory where backups will
        be stored. We recommend the directory
        <computeroutput>/ora8/m02/oracle-exports</computeroutput>. </para>

        <programlisting>
root:~# mkdir /ora8/m02/oracle-exports
root:~# chown oracle.dba /ora8/m02/oracle-exports
root:~# chmod 770 /ora8/m02/oracle-exports</programlisting>
      </listitem>

      <listitem><para> 
          Now edit
          <computeroutput>/usr/sbin/export-oracle</computeroutput> and
          change the <computeroutput>SERVICE_NAME</computeroutput> and
          <computeroutput>DATABASE_PASSWORD</computeroutput> fields to
          their correct values. If you want to use a directory other than
          <computeroutput>/ora8/m02/oracle-exports</computeroutput>, you
          also need to change the
          <computeroutput>exportdir</computeroutput> setting.
        </para>
        <para>
          Test the export procedure by running the command:
        </para>

        <programlisting>
root:~# /usr/sbin/export-oracle
mv: /ora8/m02/oracle-exports/oraexport-service_name.dmp.gz: No such file or directory

Export: Release 8.1.6.1.0 - Production on Sun Jun 11 18:07:45 2000

(c) Copyright 1999 Oracle Corporation.  All rights reserved.


Connected to: Oracle8i Enterprise Edition Release 8.1.6.1.0 - Production
With the Partitioning option
JServer Release 8.1.6.0.0 - Production
Export done in US7ASCII character set and US7ASCII NCHAR character set
. exporting pre-schema procedural objects and actions
. exporting foreign function library names for user SERVICE_NAME 
. exporting object type definitions for user SERVICE_NAME 
About to export SERVICE_NAME&#39;s objects ...
. exporting database links
. exporting sequence numbers
. exporting cluster definitions
. about to export SERVICE_NAME&#39;s tables via Conventional Path ...
. exporting synonyms
. exporting views
. exporting stored procedures
. exporting operators
. exporting referential integrity constraints
. exporting triggers
. exporting indextypes
. exporting bitmap, functional and extensible indexes
. exporting posttables actions
. exporting snapshots
. exporting snapshot logs
. exporting job queues
. exporting refresh groups and children
. exporting dimensions
. exporting post-schema procedural objects and actions
. exporting statistics
Export terminated successfully without warnings.</programlisting>

        <para>If you don&#39;t have any warnings, proceed to automate the
          backups.</para>
      </listitem>

      <listitem><para>
          Automating backups is accomplished using the UNIX
          <computeroutput>crontab</computeroutput> facility.</para>

        <para>
          While still <computeroutput>root</computeroutput>, run the
          following command. You can replace the
          <computeroutput>EDITOR=&quot;emacs -nw&quot;</computeroutput>
          portion with whatever editor your prefer, such as
          <computeroutput>EDITOR=vi</computeroutput>.
        </para>
        <programlisting>
root:~# export EDITOR=&quot;emacs -nw&quot;
root:~# crontab -e</programlisting>

        <para>Now add the following line on a line by itself </para>

        <programlisting>
0 23 * * * /usr/sbin/export-oracle</programlisting>

        <para>
          Save the file, exit the editor. Verify that the addition
          succeeded by checking the output of the following command.</para>

        <programlisting>
root:~# crontab -l | grep export-oracle
0 23 * * * /usr/sbin/export-oracle
root:~# exit
; Logout</programlisting>

        <para>If you see the line, go ahead and log out.</para>
      </listitem>
    </itemizedlist>
   </sect2>

  <sect2 id="install-export-postgres">
    <title>Set up nightly Postgres exports</title>

    <para>
      Dowload <ulink url="files/acs-pgbackup-init.txt">this script</ulink>
      to <computeroutput>/tmp</computeroutput>. At the top of the script
      are several variables that you'll need to customize:
    </para>

    <itemizedlist>
      <listitem><para>
          <computeroutput>bak</computeroutput> - location where you want
          local backups to be saved
        </para></listitem>

      <listitem><para>
          <computeroutput>servername</computeroutput> - name of your server
          (and database instance)
        </para></listitem>

      <listitem><para>
          <computeroutput>ftp_user</computeroutput> - username on your ftp
          account 
        </para></listitem>

      <listitem><para>
          <computeroutput>ftp_password</computeroutput> - password on your
          ftp account
        </para></listitem>

      <listitem><para>
          <computeroutput>ftp_dir</computeroutput> - path on the remote
          server where your backups will be uploaded
        </para></listitem>

      <listitem><para>
          <computeroutput>ftp_server</computeroutput> - your ftp server
        </para></listitem>
    </itemizedlist>

    <para>

      Next, we'll save this file to our server's
      <computeroutput>tcl</computeroutput> directory so that it will be
      loaded on startup. It will automatically be run every night at
      midnight. Note that this script only backs up the database - not the
      OpenACS scripts and file content.
    </para>

    <programlisting>
joeuser:~$ cp /tmp/acs-pgbackup-init.txt ~/web/birdnotes/tcl/acs-pgbackup-init.tcl
joeuser:~$ restart-aolserver birdnotes</programlisting>

    <para>
      That's it! The script will email you with each successful backup (or
      if it fails, it will send you an email with the reason)
    </para>
  </sect2>

  <sect2 id="install-next-nightly-vacuum">
    <title>Vacuum Postgres nightly</title>
    <para>
      The "vacuum" command must be run periodically to reclaim space. The
      "vacuum analyze" form additionally collects statistics on the
      disbursion of columns in the database, which the optimizer uses when
      it calculates just how to execute queries. The availability of this
      data can make a tremendous difference in the execution speed of
      queries. This command can also be run from cron, but it probably makes
      more sense to run this command as part of your nightly backup
      procedure - if "vacuum" is going to screw up the database, you'd
      prefer it to happen immediately after (not before!) you've made a
      backup! The "vacuum" command is very reliable, but conservatism is
      the key to good system management. So, if you're using the export
      procedure described above, you don't need to do this extra step.
    </para>

    <para>Edit your crontab:</para>
    <programlisting>
joeuser:~$ crontab -e</programlisting>

    <para>We'll set vacuum up to run nightly at 1 AM. Add the following
    line:</para>
    <programlisting>
0 1 * * * /usr/local/pgsql/bin/vacuumdb birdnotes</programlisting>
  </sect2>

  <sect2 id="install-next-add-server">
    <title>How to add a second server on a different port</title>

    <para>Starting another server is simply a matter of configuring another
    aolserver instance, creating another database and pointing this
    aolserver instance at a fresh copy of the OpenACS-4 code. We'll call
    our new server <emphasis>birdnotes-dev</emphasis></para>

    <orderedlist>
      <listitem><para>
          You can either copy your current OpenACS installation:
        </para>

        <programlisting>
joeuser:~$ cp -r web/birdnotes web/birdnotes-dev</programlisting>

        <para>
          Or Download the <ulink url="http://www.openacs.org/software">OpenACS
          4 software</ulink> into <computeroutput>/tmp</computeroutput> again.
        </para>

        <programlisting>
joeuser:~$ cd web
joeuser:~/web$ tar xzvf /tmp/openacs-4-5-release.tgz
joeuser:~/web$ mv openacs-4 birdnotes-dev</programlisting>
      </listitem>

      <listitem><para>
          Download another copy of <ulink
          url="files/openacs4.tcl.txt"><computeroutput>openacs4.tcl.txt</computeroutput></ulink>
          into <computeroutput>/tmp</computeroutput>.  </para>

        <programlisting>
joeuser:~/web$ cp /tmp/openacs4.tcl.txt ./<emphasis>birdnotes-dev</emphasis>/nsd.tcl
joeuser:~/web$ chmod 600 <emphasis>birdnotes-dev</emphasis>/nsd.tcl
joeuser:~/web$ emacs <emphasis>birdnotes-dev</emphasis>/nsd.tcl</programlisting>

        <para>Just like in <xref linkend="install-openacs-configure-aol"/>,
        you'll need to set the server parameters appropriately. Be sure to
        choose a different port than your original server and to set
        <computeroutput>server</computeroutput> to
        <emphasis>birdnotes-dev</emphasis>.</para>
      </listitem>

      <listitem><para>

          Create a new database instance called
          <emphasis>birdnotes-dev</emphasis>. Follow the instructions in
          <xref linkend="install-openacs-prepare-oracle"/> or <xref
          linkend="install-openacs-prepare-postgres"/>.

        </para></listitem>

      <listitem>
        <para>
          Start your new server!
        </para>
        <programlisting>
joeuser:~/web$ cd
joeuser:~/web$ /usr/local/aolserver/bin/nsd-postgres -t /home/joeuser/web/<emphasis>birdnotes-dev</emphasis>/nsd.tcl</programlisting>

        <para>
          Visit the site with a web browser (using the port that you set
          above). You should see the OpenACS installer. Once you install
          the OpenACS datamodel, you'll also need to add your new aolserver
          instance to <computeroutput>/etc/inittab</computeroutput> (or
          daemontools) so it restarts automatically.</para>
      </listitem>
    </orderedlist>
  </sect2>

  <sect2 id="install-next-openfts" xreflabel="Set Up OpenFTS">
    <title>Set up site-wide search</title>
    <para>

      OpenACS uses the <ulink
      url="http://openfts.sourceforge.net/">OpenFTS</ulink> package to
      implement site-wide-search. As of this writing, the current version
      is 0.3.2. There are good instructions included in the OpenFTS
      instructions which I will repeat here. Be sure to look at those
      instructions if you're installing a version later than 0.3.2; the
      instructions may have changed. You'll need to have the Tcl
      development libraries and headers installed. (Debian users:
      <computeroutput>apt-get install tcl8.3-dev</computeroutput>)

    </para>

    <orderedlist>
      <listitem><para>

          As <computeroutput>root</computeroutput>, download the latest TCL
          version of the Search-OpenFTS driver from <ulink
          url="http://sourceforge.net/project/showfiles.php?group_id=30968">SourceForge</ulink>
          into <computeroutput>/tmp</computeroutput>. Extract the source
          into <computeroutput>/usr/local/src</computeroutput>

        </para>

        <programlisting>
joeuser:~$ su -
Password: **********
root:~# cd /usr/local/src
root:/usr/local/src# tar xzf /tmp/Search-OpenFTS-tcl-0.3.2.tar.gz
root:/usr/local/src# chown -R root.root Search-OpenFTS-tcl-0.3.2
root:/usr/local/src# cd Search-OpenFTS-tcl-0.3.2</programlisting>
      </listitem>

      <listitem><para>

          Configure it. Note that you may need to set
          <computeroutput>--with-tcl=</computeroutput>(your Tcl library
          location). For Debian, add this to the end of the
          <computeroutput>./configure</computeroutput> command:
          <computeroutput>--with-tcl=/usr/lib/tcl8.3</computeroutput>

        </para>

        <programlisting>
root:/usr/local/src/Search-OpenFTS-tcl-0.3.2# ./configure --with-aolserver-src=/usr/local/src/aolserver/aolserver</programlisting>
      </listitem>

      <listitem><para>

          Then compile it, copy the module to your AOLserver
          <computeroutput>bin</computeroutput> directory, and copy the TCL
          files to your AOLserver <computeroutput>tcl</computeroutput>
          directory:

        </para>

        <programlisting>
root:/usr/local/src/Search-OpenFTS-tcl-0.3.2# cd aolserver
root:/usr/local/src/Search-OpenFTS-tcl-0.3.2/aolserver# make
root:/usr/local/src/Search-OpenFTS-tcl-0.3.2/aolserver# cp nsfts.so /usr/local/aolserver/bin
root:/usr/local/src/Search-OpenFTS-tcl-0.3.2/aolserver# cd ..</programlisting>
      </listitem>

      <listitem><para>

          Load the tsearch module SQL into your database and then compile
          the openfts module in the Postgresql contrib directory.

        </para>

        <programlisting>
root:/usr/local/src/Search-OpenFTS-tcl-0.3.2# cp -r pgsql_contrib_openfts /usr/local/src/postgresql-7.2.3/contrib
root:/usr/local/src/Search-OpenFTS-tcl-0.3.2# cd /usr/local/src/postgresql-7.2.3/contrib/pgsql_contrib_openfts
root:/usr/local/postgresql-7.2.3/contrib/pgsql_contrib_openfts# make
root:/usr/local/postgresql-7.2.3/contrib/pgsql_contrib_openfts# su postgres
postgres:/usr/local/postgresql-7.2.3/contrib/pgsql_contrib_openfts$ make install
postgres:/usr/local/postgresql-7.2.3/contrib/pgsql_contrib_openfts$ /usr/local/pgsql/bin/psql birdnotes -f /usr/local/src/postgresql-7.2.3/contrib/tsearch/tsearch.sql
postgres:/usr/local/postgresql-7.2.3/contrib/pgsql_contrib_openfts$ /usr/local/pgsql/bin/psql birdnotes -f openfts.sql
postgres:/usr/local/postgresql-7.2.3/contrib/pgsql_contrib_openfts$ exit
root:/usr/local/postgresql-7.2.3/contrib/pgsql_contrib_openfts# exit</programlisting>
      </listitem>

      <listitem>
        <para>

          Uncomment the following line in your aolserver config file (in our
          example:
          <computeroutput>~/web/birdnotes/nsd.tcl</computeroutput>)
          in the "ns_section ns/server/${server}/modules" section:

        </para>

        <programlisting>
        ns_param   nsfts           ${bindir}/nsfts.so</programlisting>
      </listitem>

      <listitem><para>
          Open a browser and go to your server
          (http://yourserver:port). Click on the "Package Manager" link in
          the "Quick Links" section on the right side of the page.
        </para></listitem>

      <listitem><para>
          Click on the "Install packages" link and follow the instructions
          to install the Note package and the OpenFTS Driver 4.2 package.
        </para></listitem>

      <listitem><para>
          Restart your server.

          <programlisting>
joeuser:~$ svc -t /service/<emphasis>birdnotes</emphasis></programlisting>
        </para></listitem>

      <listitem><para> 
          Give the server a few minutes to restart and then go back to your
          server's front page and click on "Site Map" from the "Quick
          Links" 
        </para></listitem>

      <listitem><para>        
          Create a "new sub folder" under "Main Site". Call the url
          "openfts".  
        </para></listitem>

      <listitem><para> Click "mount" to mount the OpenFTS driver at the url
          "openfts" (despite what the system says about these packages not
          being meant to be mounted)
        </para></listitem>

      <listitem>
        <para>

          Click the "Set parameters" link next to OpenFTS. Change the
          <computeroutput>openfts_tcl_src_path</computeroutput> to
          <computeroutput>/usr/local/src/Search-OpenFTS-tcl-0.3.2</computeroutput>

        </para>
      </listitem>

      <listitem><para>
          Create another folder under "Main Site" at the url
          "search". Create a "new application". Call the application
          "Search" and choose the "Search" package from the drop-down list.
          </para></listitem>

      <listitem><para>
          Create a third folder under "Main Site" at the url
          "notes". Create a "new application". Call the application "Notes"
          and choose the "Note" package from the drop-down list.
          </para></listitem>

      <listitem><para>
          Restart the server.
        </para></listitem>

      <listitem><para> 
          Return to your home page. Near the bottom of the page, Click on
          the "OpenFTS Driver" link. Then click on
          "Administration". Finally, click on "Initialize OpenFTS
          Engine". Accept the defaults and continue.
        </para></listitem>

      <listitem><para> 
          Click on the "Main Site" link to get back to the home page. Now,
          click on the "ACS Service Contract" link near the bottom of the
          home page.  
        </para></listitem>

      <listitem><para>
          Click on the link to "install" the FtsEngineDriver. Also, click
          the link to install the Note content provider.
        </para></listitem>

      <listitem><para>
          Restart the server. You can try inserting some notes and then
          going to the search page to search for stuff. Note that the
          content may not get indexed immediately, so give it a few
          minutes.
        </para></listitem>
    </orderedlist>
  </sect2>

  <para><phrase role="cvstag">($Id$)</phrase></para>
</sect1>
<!--
   Local Variables:
   sgml-parent-document: ("../index.xml" "book" "sect1")
   End:
-->
