<?xml version='1.0' ?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd" [
<!ENTITY % myvars SYSTEM "../variables.ent">
%myvars;
]>
<sect1 id="openacs" xreflabel="Install OpenACS &version;">
  <title>Install OpenACS &version;</title>

  <authorblurb>
    <para>by <ulink url="mailto:vinod@kurup.com">Vinod Kurup</ulink></para>
  </authorblurb>

  <sect2 id="openacs-setup">
    <title>Set up the file system for one or more OpenACS Sites</title>
    <para>For Linux Standard Base compliance and ease of backup,
      all of the files in each OpenACS site are stored in a
      subdirectory of
      <computeroutput>/var/lib/aolserver</computeroutput>, one
      subdirectory per site.  The first time you install an OpenACS
      site on a server, you must create the parent directory and set its permissions:</para>
    <screen>[root root]# <userinput>mkdir /var/lib/aolserver</userinput>
[root root]# <userinput>chgrp web /var/lib/aolserver</userinput>
[root root]# <userinput>chmod 770 /var/lib/aolserver</userinput>
[root root]#
<action>mkdir /var/lib/aolserver
chgrp web /var/lib/aolserver
chmod 770 /var/lib/aolserver</action></screen>

  </sect2>
  <sect2 id="install-aolserver-user-accounts">
    <title>Set up a user account for each site.</title>
    <para>
      AOLserver needs to be started as the root user if you want to use
      port 80. Once it starts, though, it will drop the root privileges and
      run as another user, which you must specify on the command line. It's
      important that this user has as few privileges as possible. Why?
      Because if an intruder somehow breaks in through AOLserver, you don't
      want her to have any ability to do damage to the rest of your
      server.</para>
        <para>At the same time, AOLserver needs to have write access to
      some files on your system in order for OpenACS to function
      properly. So, we'll run AOLserver with a different user account
      for each different service.  A service name should be a single
      word, <emphasis>letters and numbers only</emphasis>. If the name
      of your site is one word, that would be a good choice. For
      example &quot;<replaceable>service0</replaceable>&quot; might be the service name for the
      <ulink url="http://service0.net/"><replaceable>service0</replaceable>.net</ulink>
      community.</para>
        <para>We'll leave the password blank, which prevents login by
      password, for increased security.  The only way to log in will
      be with ssh certificates.  The only people who should log in are
      developers for that specific instance.  Add this user, and put
      it in the <computeroutput><replaceable>service0</replaceable></computeroutput> group so that it
      can use database and server commands associated with that group.
    </para>

        <screen>[root root]# <userinput>groupadd <replaceable>web</replaceable></userinput>
[root root]# <userinput>useradd -g <replaceable>service0</replaceable> -G web <replaceable>service0</replaceable> -d /home/<replaceable>service0</replaceable></userinput>
[root root]#</screen>
  </sect2>
  
  <sect2 id="install-with-script">
    <title>Install with automated script (EXPERIMENTAL)</title>
    <para>Starting with OpenACS 5.0, an experimental script is
    available to automate all of the steps for the rest of this
    section.  Requires <link linkend="install-tclwebtest">tclwebtest</link>.  If you are not feeling lucky, skip to <xref
        linkend="install-from-tarball"/>.</para>
        <para>Get the install script from CVS.  It is located within
        the main cvs tree, at /etc/install.  Use anonymous CVS
        checkout to get that directory in the home directory of the
        service's dedicated user.  We put it there so that it is not
        overwritten when we do the main CVS checkout to the target
        location.</para>
        <screen>[root root]# <userinput>su - <replaceable>service0</replaceable></userinput>
[service0 service0]$ <userinput>cvs -d :pserver:anonymous@openacs.org:/cvsroot co -d install openacs-4/etc/install</userinput>
cvs server: Updating install
U install/README
U install/TODO
  ... many lines omitted ...
U install/tcl/twt-procs.tcl
U install/tcl/user-procs.tcl
[service0 service0]$ <userinput>cd install</userinput>
[service0 install]$ 
</screen>
        <para>Edit
        <computeroutput>/home/<replaceable>service0</replaceable>/install/install.tcl</computeroutput>
        and change the values as documented in the file.  It will work
        unchanged at 127.0.0.1:8000.</para>
        <para>Run the file as root.</para>
        <screen>[service0 service0]$ <userinput>exit</userinput> 
[root root]# <userinput>sh /home/<replaceable>service0</replaceable>/install/install.sh</userinput>
/home/service0/install/install.sh: Starting installation with config_file 
/home/service0/install/install.tcl. Using serverroot=/var/lib/aolserver/
service0, server_url=http://0.0.0.0:8000, do_checkout=yes, do_install=yes, 
dotlrn=no, and database=postgres., use_daemontools=true
  ... many lines omitted ...
./install.sh: Finished (re)installing /var/lib/aolserver/service0 at Wed Nov  
5 13:27:17 CET 2003.  Access the new site at http://127.0.0.1:8000 with admin 
username admin@yourserver.test and password 1
[root root]#</screen>
    <para>You can proceed to <xref linkend="install-next-steps"/>.</para>
  </sect2>

  <sect2 id="install-from-tarball">
    <title>Install from tarball</title>
    <para>You should already have downloaded the OpenACS tarball
      to the <computeroutput>/tmp</computeroutput> directory.  If
      not, <link linkend="openacs-download">download the OpenACS
      tarball</link> and save it in
      <computeroutput>/tmp</computeroutput> and proceed:</para>
    <orderedlist>
      <listitem id="install-openacs-download">
        <para>Unpack the OpenACS tarball and rename it to <computeroutput>service0</computeroutput>.  Secure the directory so that only the owner can access it.  Check the permissions by listing the directory.</para>       
        <screen>[root root]# <userinput>su - <replaceable>service0</replaceable></userinput>
[service0 service0]$ <userinput>cd /var/lib/aolserver</userinput>
[service0 aolserver]$ <userinput>tar xzf /tmp/&tarballpath;.tgz</userinput>
[service0 aolserver]$ <userinput>mv &tarballpath; <replaceable>service0</replaceable></userinput>
[service0 aolserver]$ <userinput>chmod -R 700 <replaceable>service0</replaceable></userinput>
[service0 aolserver]$ <userinput>ls -al</userinput>
total 3
drwxrwx---    3 root     web          1024 Mar 29 16:41 .
drwxr-xr-x   25 root     root         1024 Mar 29 16:24 ..
drwx------    7 service0 web          1024 Jan  6 14:36 service0
[service0 aolserver]$ <userinput>exit</userinput>
logout
[root root]#
<action>su - service0
cd /var/lib/aolserver
tar xzf /tmp/&tarballpath;.tgz
mv &tarballpath; service0
chmod -R 700 service0/
exit</action></screen>
      </listitem>
      <listitem>
        <para><link linkend="cvs-service-import">Add the Service to CVS</link> (OPTIONAL)</para>
      </listitem>
      <listitem>
        <para>Prepare the database</para>
        <itemizedlist>
          <listitem>
            <formalpara id="install-openacs-prepare-oracle">
              <title>Prepare Oracle for OpenACS</title>
              <para>If you won't be using Oracle, skip to <xref
                  linkend="install-openacs-prepare-postgres"/></para>
            </formalpara>
            <para>
	  You should be sure that your user account
	  (e.g. <computeroutput><replaceable>service0</replaceable></computeroutput>) is in the
	  <computeroutput>dba</computeroutput> group.
	</para>
            <orderedlist>
              <listitem><para> 
		  Verify membership by typing
		  <computeroutput>groups</computeroutput> when you login:

		  <programlisting>[service0 ~]$ groups
dba web</programlisting>

		  If you do not see these groups, take the following action: 

		  <programlisting>[service0 ~]$ <userinput>su -</userinput>
Password: ************
[root ~]# <userinput>adduser <replaceable>service0</replaceable> dba</userinput></programlisting>

		  If you get an error about an undefined group, then add that group
		  manually:

<programlisting>[root ~]# <userinput>groupadd dba</userinput>
[root ~]# <userinput>groupadd web</userinput></programlisting>

		  Make sure to logout as <computeroutput>root</computeroutput> when
		  you are finished with this step and log back in as
		  your regular user.
		</para></listitem>

              <listitem><para> 
		  Connect to Oracle using
		  <computeroutput>svrmgrl</computeroutput> and login:
        
		  <programlisting>[service0 ~]$ <userinput>svrmgrl</userinput>
SVRMGR&gt; <userinput>connect internal</userinput>
Connected.</programlisting>
		</para></listitem>

              <listitem><para>
		  Determine where the system tablespaces are stored: 

		  <programlisting>SVRMGR&gt; <userinput>select file_name from dba_data_files;</userinput></programlisting>
        Example results: 
		  <programlisting>/ora8/m01/app/oracle/oradata/ora8/system01.dbf
/ora8/m01/app/oracle/oradata/ora8/tools01.dbf
/ora8/m01/app/oracle/oradata/ora8/rbs01.dbf
/ora8/m01/app/oracle/oradata/ora8/temp01.dbf
/ora8/m01/app/oracle/oradata/ora8/users01.dbf
/ora8/m01/app/oracle/oradata/ora8/indx01.dbf
/ora8/m01/app/oracle/oradata/ora8/drsys01.dbf</programlisting>
		</para></listitem>

              <listitem><para> 
		  Using the above output, you should determine where
		  to store your tablespace. As a general rule, you&#39;ll want to
		  store your tablespace on a mount point under the
		  <computeroutput>/ora8</computeroutput> directory that is separate
		  from the Oracle system data files. By default, the Oracle system
		  is on <computeroutput>m01</computeroutput>, so we will use
		  <computeroutput>m02</computeroutput>. This enables your Oracle
		  system and database files to be on separate disks for optimized
		  performance. For more information on such a configuration, see
		  <ulink
		  url="http://philip.greenspun.com/panda/databases-choosing">Chapter
		  12</ulink> of <ulink
		  url="http://philip.greenspun.com/panda/">Philip&#39;s
		  book</ulink>.  For this example, we&#39;ll use
		  <computeroutput>/ora8/m02/oradata/ora8/</computeroutput>.
		</para></listitem>

              <listitem><para> 
		  Create the directory for the datafile; to do this,
		  exit from <computeroutput>svrmgrl</computeroutput> and login as
		  <computeroutput>root</computeroutput> for this step: </para>

		<programlisting>
SVRMGR&gt; <userinput>exit</userinput>
[service0 ~]$ <userinput>su -</userinput>
Password: ************
[root ~]# <userinput>mkdir -p /ora8/m02/oradata/ora8/</userinput>
[root ~]# <userinput>chown <replaceable>service0</replaceable>:web /ora8/m02/oradata/ora8</userinput>
[root ~]# <userinput>chmod 775 /ora8/m02/oradata/ora8</userinput>
[root ~]# <userinput>exit</userinput>
[service0 ~]$</programlisting>
              </listitem>

              <listitem><para> 

		  Create a tablespace for the service. It is important that the
		  tablespace can <computeroutput>autoextend</computeroutput>. This
		  allows the tablespace&#39;s storage capacity to grow as the size
		  of the data grows. We set the pctincrease to be a very low value
		  so that our extents won&#39;t grow geometrically. We do not set
		  it to 0 at the tablespace level because this would affect
		  Oracle&#39;s ability to automatically coalesce free space in the
		  tablespace.

		</para>
		<programlisting>[service0 ~]$ <userinput>svrmgrl</userinput>
SVRMGR&gt; <userinput>connect internal;</userinput>
SVRMGR&gt; <userinput>create tablespace <replaceable>service0</replaceable>
      datafile &#39;/ora8/m02/oradata/ora8/<replaceable>service0</replaceable>01.dbf&#39; 
      size 50M 
      autoextend on 
      next 10M
      maxsize 300M
      extent management local
      uniform size 32K;</userinput></programlisting>
              </listitem>

              <listitem><para> 
		  Create a database user for this service. Give the
		  user access to the tablespace and rights to connect. We'll use
		  <computeroutput><replaceable>service0password</replaceable></computeroutput> as our password.</para>

                <para>
		  Write down what you specify as
                  <emphasis>service_name</emphasis>
                  (i.e. <computeroutput><replaceable>service0</replaceable></computeroutput>)
                  and <emphasis>database_password</emphasis>
                  (i.e. <computeroutput><replaceable>service0password</replaceable></computeroutput>). You
                  will need this information for configuring exports
                  and AOLserver.
		</para>

		<programlisting>
SVRMGR&gt; <userinput>create user <replaceable>service0</replaceable> identified by <replaceable>service0password</replaceable> default tablespace <replaceable>service0</replaceable>
    temporary tablespace temp quota unlimited on <replaceable>service0</replaceable>;</userinput>
SVRMGR&gt; <userinput>grant connect, resource, ctxapp, javasyspriv, query rewrite to <replaceable>service0</replaceable>;</userinput>
SVRMGR&gt; <userinput>revoke unlimited tablespace from <replaceable>service0</replaceable>;</userinput>
SVRMGR&gt; <userinput>alter user <replaceable>service0</replaceable> quota unlimited on <replaceable>service0</replaceable>;</userinput>
SVRMGR&gt; <userinput>exit;</userinput></programlisting>

                <para>
		  Your table space is now ready. In case you are trying to delete a
		  previous OpenACS installation, consult these commands in <xref
                    linkend="install-openacs-delete-tablespace"/> below.
		</para></listitem>

              <listitem><para>
        Make sure that you can login to Oracle using your
        <emphasis>service_name</emphasis> account: </para>

		<programlisting>[service0 ~]$ <userinput>sqlplus <replaceable>service0</replaceable>/<replaceable>service0password</replaceable></userinput>
SQL&gt; <userinput>select sysdate from dual;</userinput>
SYSDATE
----------
2001-12-20
SQL&gt; <userinput>exit;</userinput></programlisting>

                <para>
		  You should see today&#39;s date in a format &#39;YYYY-MM-DD.&#39;
		  If you can&#39;t login, try redoing step 1 again. If the date is
		  in the wrong format, make sure you followed the steps outlined in
		  <xref linkend="install-oracle-troubleshooting"/>
		  </para></listitem>
              
            </orderedlist>
          </listitem>
          <listitem>
            <formalpara id="install-openacs-prepare-postgres">
              <title>Prepare PostgreSQL for an OpenACS Service</title>
              <para></para>
            </formalpara>
            <itemizedlist>
              <listitem id="create-service-db-user">
                <para>PostgreSQL:</para>
                <para>Create a user in the database matching the service
            name.  With default PostgreSQL authentication, a system user connecting locally automatically authenticates as the postgres user of the same name, if one exists.  We currently use postgres "super-users" for everything, which means that anyone with access to any of the openacs system accounts on a machine has full access to all postgresql databases on that machine.</para>
                <screen>[root root]# <userinput>su - postgres</userinput>
[postgres pgsql]$ <userinput>createuser -a -d <replaceable>service0</replaceable></userinput>
CREATE USER
[postgres pgsql]$ <userinput>exit</userinput>
logout
[root root]#</screen>
              </listitem>
              <listitem id="create-database">
                <para>Create a database with the same name as our service name, <replaceable>service0</replaceable>.</para>
                <screen>[root root]# <userinput>su - <replaceable>service0</replaceable></userinput>
[service0 service0]$ <userinput>createdb -E UNICODE <replaceable>service0</replaceable></userinput>
CREATE DATABASE
[service0 service0]$
<action>su - <replaceable>service0</replaceable>
createdb -E UNICODE <replaceable>service0</replaceable></action></screen>
              </listitem>
              <listitem>
                <para>Automate daily database Vacuuming.  This is a process which cleans out discarded data from the database.  A quick way to automate vacuuming is to edit the cron file for the database user.  Recommended: <computeroutput>VACUUM ANALYZE</computeroutput> every hour and <computeroutput>VACUUM FULL ANALYZE</computeroutput> every day.</para>
                <indexterm>
                  <primary>Postgres</primary>
                  <secondary>Vacuuming</secondary>
                </indexterm>
                <screen>[service0 service0]$ <userinput>export EDITOR=emacs;crontab -e</userinput></screen>
                <para>Add this line to the file.  The numbers and stars at the beginning are cron columns that specify when the program should be run - in this case, whenever the minute is 0 and the hour is 1, i.e., 1:00 am every day.</para>
                <programlisting>0 1-23 * * * /usr/local/pgsql/bin/vacuumdb --full --analyze <replaceable>service0</replaceable>
0 0 * * * /usr/local/pgsql/bin/vacuumdb --full --analyze <replaceable>service0</replaceable></programlisting>
              </listitem>
              <listitem>
                <para><link linkend="install-openfts-postgres">Add Full Text Search Support</link> (OPTIONAL)</para>
              </listitem>
              <listitem id="db-setup-exit">
                <para> At this point the database should be ready for installing OpenACS.</para>
              </listitem>
            </itemizedlist>
          </listitem>
        </itemizedlist>
      </listitem>
      <listitem id="install-openacs-configure-aol">
        <formalpara>
          <title>Configure an AOLserver Service for OpenACS</title>
          <para></para>
        </formalpara>
        <orderedlist>
          <listitem id="configure-config-tcl">
            <para>
	  The AOLserver architecture lets you run an arbitrary number of
	  virtual servers. A virtual server is an HTTP service running on a
	  specific port, e.g. port 80. In order for OpenACS to work, you
	  need to configure a virtual server.  The Reference Platform
	  uses a configuration file included in the OpenACS tarball,
	  <computeroutput>/var/lib/aolserver/<replaceable>service0</replaceable>/etc/config.tcl</computeroutput>.
	   Open it in an editor to adjust the parameters.</para>
            <indexterm>
              <primary>AOLserver</primary>
              <secondary>configuration</secondary>
            </indexterm>
            
            <screen>[root root]# <userinput>su - <replaceable>service0</replaceable></userinput>
[service0 service0]$ <userinput>cd /var/lib/aolserver/<replaceable>service0</replaceable>/etc</userinput>
[service0 etc]$ <userinput>emacs config.tcl</userinput>
</screen>
            <para>
	  You can continue without changing any values in the file.  However, if you don't change <computeroutput>address</computeroutput> to match the computer's ip address, you won't be able to browse to your server from other machines.
	</para>
            
            <itemizedlist>
              <listitem><para><emphasis>httpport</emphasis> - If you want your
		  server on a different port, enter it here.  The Reference Platform port is 8000, which is suitable for development use.  Port 80 is the standard http port - it's the port used by your browser when you enter http://yourserver.test.  So you should use port 80 for your production site.</para></listitem>
              
              <listitem>
                <para><emphasis>httpsport</emphasis> - This is the
      port for https requests.  The Reference Platform https port is
      8443.  If http port is set to 80, httpsport should be 143 to
      match the standard.</para>
              </listitem>
              
              <listitem><para> 
		  <emphasis>address</emphasis> - The IP address of the server.  If you are hosting multiple IPs on one computer, this is the address specific to the web site.  Each virtual server will ignore any requests directed at other addresses.</para>
              </listitem>
              <listitem>
                <para><emphasis>server</emphasis> - This is the keyword that, by convention, identifies the service.  It is also used as part of the path for the service root, as the name of the user for running the service, as the name of the database, and in various dependent places.  The Reference Platform uses <replaceable>service0</replaceable>.
      
    </para></listitem>
              
              <listitem><para><emphasis>db_name</emphasis> - In almost all cases,
		  this can be kept as a reference to $server. If for some reason,
		  the tablespace you are using is different than your servername,
		  then you can set it here. You should have a good reason for doing
		  this. 
		</para></listitem>

              <listitem><para> 
		  <emphasis>servername</emphasis> - This is just a *pretty* name for your server.</para>
              </listitem>
              
              <listitem>
                <para><emphasis>user_account</emphasis> - The account that
        will both own OpenACS files and connect to the database (for
        Postgresql).</para>
              </listitem>
              
              <listitem>
                <para><emphasis>debug</emphasis> - Set to true for a very verbose error log, including many lines for every page view, success or failure.</para>
              </listitem>
            </itemizedlist>
          </listitem>
          <listitem>
            <para>
	  AOLserver is very configurable. These settings should get you
	  started, but for more options, read the <ulink
	  url="http://aolserver.com/docs/admin/config.html">AOLserver
	  docs</ulink>.
	</para>
          </listitem>
          <listitem>
            <para><link linkend="enable-openfts">Enable OpenFTS Full Text Search</link> (OPTIONAL)</para>
          </listitem>
          <listitem>
            <para><link linkend="install-ssl">Install nsopenssl
        for SSL support.</link> (OPTIONAL)</para>
          </listitem>
        </orderedlist>
      </listitem>
      <listitem id="verify-aolserver-startup">
        <formalpara>
          <title>Verify AOLserver startup</title>
          <para></para>
        </formalpara>
        <orderedlist>
      <listitem id="start-aolserver">
        <para>
	  Kill any current running AOLserver processes and start a new
	  one.  If you are using Oracle, rather than PostgreSQL, replace
	  <computeroutput>nsd-postgres</computeroutput> with
	  <computeroutput>nsd-oracle</computeroutput>).</para>
        <para>If you want to use port 80, there are complications.
	  First, AOLserver must be root to use system ports such as
	  80, but refuses to run as root for security reasons.  Thus
	  you must start as root and specify a non-root user ID and
	  Group ID which AOLserver will switch to after claiming the
	  port.  To do so, find the UID and GID of the
	  <replaceable>service0</replaceable> user via
	  <computeroutput>grep <replaceable>service0</replaceable>
	  /etc/passwd</computeroutput> and then put those numbers into
	  the command line via <computeroutput>-u
	  <replaceable>501</replaceable> -g
	  <replaceable>502</replaceable></computeroutput>.  Second, if you are root then killall will affect all OpenACS services on the machine, so if there's more than one you'll have to do <computeroutput>ps -auxw | grep
	  nsd</computeroutput> and selectively kill by job number.</para>
        <screen>[service0 etc]$ <userinput>killall nsd</userinput>
nsd: no process killed
[service0 service0]$<userinput> /usr/local/aolserver/bin/nsd-postgres -t /var/lib/aolserver/<replaceable>service0</replaceable>/etc/config.tcl</userinput>
[service0 service0]$ [08/Mar/2003:18:13:29][32131.8192][-main-] Notice: nsd.tcl: starting to read config file...
[08/Mar/2003:18:13:29][32131.8192][-main-] Notice: nsd.tcl: finished reading config file.</screen>
      </listitem>
      <listitem id="connect-to-aolserver">
        <para>
	  Attempt to connect to the service from a web browser.  You should specify a URL like: <computeroutput>http://<replaceable>yourserver.test</replaceable>:8000</computeroutput></para>

	<para>
	  You should see a page that looks like <ulink
        url="files/openacs-start.html">this</ulink>.  If you <link
        linkend="cvs-service-import">imported your files into
        cvs</link>, now that you know it worked you can erase the temp
        directory with <computeroutput>rm -rf /var/lib/aolserver/service0.orig</computeroutput>.
	</para>

	<para>

	  If you don't see the login page, view your error log
	  (<computeroutput>/var/lib/aolserver/<replaceable>service0</replaceable>/log/<replaceable>service0</replaceable>-error.log</computeroutput>)
	  to make sure the service is starting without any
	  problems. The most common errors here are trying to start a
	  port 80 server while not root, failing to connect because of
	  a firewall, and aolserver failing to start due to
	  permissions errors or missing files.  If you need to make
	  changes, don&#39;t forget to kill any running servers with
	  <userinput>killall nsd</userinput>.
	</para>
      </listitem>
      <listitem>
        <para><link linkend="install-openacs-keepalive">Automate
        AOLserver keepalive</link> (OPTIONAL)</para>
      </listitem>
        </orderedlist>
      </listitem>
      <listitem id="install-openacs-using-installer">
        <formalpara>
          <title>Configure a Service with the OpenACS
          Installer</title>
          <para>
	  Now that you've got AOLserver up and running, let's install OpenACS
	  &version;.
	</para>
        </formalpara>
    <itemizedlist>
      <listitem><para> 
		  You should see a page from the webserver titled
		  <computeroutput>OpenACS Installation:
		  Welcome</computeroutput>. You will be warned if your version of
		  the database driver is out of date, if AOLserver cannot connect
		  to the database, if any modules are missing or out-of-date, or if
		  there are any problems with filesystem permissions on the server
		  side. But if everything is fine, you can click
		  <computeroutput>Next</computeroutput> to proceed to load the
		  OpenACS Kernel data model.  
		</para></listitem>

      <listitem><para>

		  The next page shows the results of loading the OpenACS Kernel
		  data model - be prepared to wait a few minutes as it works. You
		  should see a string of output messages from the database as the
		  datamodel is created.  You'll see the line:

		</para>

        <programlisting>
Loading package .info files ... this will take a few minutes</programlisting>

        <para>

		  This will really take a few minutes. Have faith! Finally, another
		  <computeroutput>Next</computeroutput> button will appear at the
		  bottom - click it.

		</para>
      </listitem>

      <listitem><para> 		  

		  The following page shows the results of loading the core package
		  data models. You should see positive results for each of the
		  previously selected packages, but watch out for any
		  errors. Eventually, the page will display &quot;Generating secret
		  tokens&quot; and then &quot;Done&quot;- click
		  <computeroutput>Next</computeroutput>.

		</para></listitem>

      <listitem><para>

		  You should see a page, &quot;OpenACS Installation: Create
		  Administrator&quot; with form fields to define the OpenACS site
		  administrator. Fill out the fields as appropriate, and click
		  <computeroutput>Create User</computeroutput>.

		</para></listitem>

      <listitem><para>
		  You should see a page, &quot;OpenACS Installation: Set System
		  Information&quot; allowing you to name your service. Fill out the
		  fields as appropriate, and click <computeroutput>Set System
		  Information</computeroutput> 
		</para></listitem>

      <listitem><para> 
		  You&#39;ll see the final Installer page, &quot;OpenACS
		  Installation: Complete.&quot; It will tell you that the server is
		  being restarted; note that unless you already set up a way for
		  AOLserver to restart itself (ie. inittab or daemontools),
		  you&#39;ll need to manually restart your service.
		</para>
        <screen>[service0 service0]$ <userinput>/usr/local/aolserver/bin/nsd-postgres -t /var/lib/aolserver/<replaceable>service0</replaceable>/config.tcl</userinput></screen>
      </listitem>

      <listitem><para> 
		  Give the server a few minutes to start up. Then
		  reload the final page above. You should see the front page, with
		  an area to login near the upper right.  Congratulations, OpenACS
		  &version; is now up and running!  
		</para></listitem>
    </itemizedlist>
      </listitem>
    </orderedlist>
  </sect2>

  <sect2 id="install-next-steps">
    <title>Next Steps</title>
    <itemizedlist>
      <listitem>
        <para>Install Full Text Search (OPTIONAL).  If you have <link
        linkend="install-openfts">installed OpenFTS</link> and enabled
        OpenFTS, you can now <link linkend="install-fts-engine">install</link> the OpenFTS Driver package and
        Full Text Search Engine package in the OpenACS service.</para>
      </listitem>
      <listitem>
        <para>This is a good time to make a <link
    linkend="snapshot-backup">backup</link> of your service.  If this is a
    production site, you should set up <link
    linkend="automated-backup">automatic nightly backups</link>.</para>
      </listitem>
      <listitem>
        <para>If you want traffic reports, <link
    linkend="analog-setup">set up analog</link> or another log
    processing program.</para>
      </listitem>
      <listitem><para>Follow the instruction on the home page to
      change the appearance of your service or add more
      packages. (<link linkend="configure">more information</link>)</para>
      </listitem>
      <listitem><para>Proceed to the <link linkend="tutorial">tutorial</link> to learn how to develop your own packages.</para>
      </listitem>
      <listitem>
        <para>Set up database environment variables for the site
	user.  These settings are necessary for working with the
	database while logged in as the service user.  They do not
	directly affect the service's run-time connection with the
	database, because those environmental variables are set by the
	wrapper scripts nsd-postgres and nsd-oracle.</para>
        
        <screen>[root root]# <userinput>su - <replaceable>service0</replaceable></userinput>
[service0 service0]$ <userinput>emacs .bashrc</userinput></screen>
        <para>Put in the appropriate lines for the database you are running.  If you will use both databases, put in both sets of lines.</para>
        <itemizedlist>
          <listitem>
            <para>PostgreSQL:</para>
            <programlisting>export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/pgsql/lib
export PATH=$PATH:/usr/local/pgsql/bin</programlisting>
          </listitem>
          <listitem>
            <para>Oracle.  These environment variables are specific for a local Oracle
      installation communicating via IPC. If you are connecting to a remote
      Oracle installation, you'll need to adjust these appropriately. Also,
      make sure that the '8.1.7' matches your Oracle version.
</para>
            <programlisting>export ORACLE_BASE=/ora8/m01/app/oracle
export ORACLE_HOME=$ORACLE_BASE/product/<replaceable>8.1.7</replaceable>
export PATH=$PATH:$ORACLE_HOME/bin
export LD_LIBRARY_PATH=$ORACLE_HOME/lib:/lib:/usr/lib
export ORACLE_SID=ora8
export ORACLE_TERM=vt100
export ORA_NLS33=$ORACLE_HOME/ocommon/nls/admin/data</programlisting>
          </listitem>
        </itemizedlist>

        <para>Test this by logging out and back in as
	<computeroutput><replaceable>service0</replaceable></computeroutput> and checking the paths.</para>
        <screen>[service0 service0]$ <userinput>exit</userinput>
logout
[root src]# <userinput>su - <userinput><replaceable>service0</replaceable></userinput></userinput>
[service0 ~]$ <userinput>env</userinput>
</screen>
        <itemizedlist>
          <listitem>
            <para>For PostgreSQL, you should see:</para>
        <screen>
LD_LIBRARY_PATH=:/usr/local/pgsql/lib
PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:/usr/bin/X11:/usr/X11R6/bin:\
  /root/bin:/usr/local/pgsql/bin:/usr/local/pgsql/bin</screen>
          </listitem>
          <listitem>
            <para>For Oracle:</para>
        <screen>ORACLE_BASE=/ora8/m01/app/oracle
ORACLE_HOME=/ora8/m01/app/oracle/product/8.1.7
PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:/usr/bin/X11:/usr/X11R6/bin:\
  /root/bin:/ora8/m01/app/oracle/product/8.1.7/bin
LD_LIBRARY_PATH=/ora8/m01/app/oracle/product/8.1.7/lib:/lib:/usr/lib
ORACLE_SID=ora8
ORACLE_TERM=vt100
ORA_NLS33=$ORACLE_HOME/ocommon/nls/admin/data</screen>
          </listitem>
        </itemizedlist>

      </listitem>
      <listitem><para>Test your <link linkend="backup-recovery">backup and recovery</link> procedure.</para>
      </listitem>
      <listitem><para>Set up <xref linkend="uptime"/>.</para>
      </listitem>
    </itemizedlist>

  <para><phrase role="cvstag">($Id$)</phrase></para>
  </sect2>

</sect1>
