<sect1 id="postgres" xreflabel="Installing PostgreSQL">
  <title>Install PostgreSQL 7.2.3</title>

  <authorblurb>
	by <ulink url="mailto:vinod@kurup.com">Vinod Kurup</ulink>
  </authorblurb>

  <para>
	Skip this page if you're not interested in PostgreSQL.
  </para>

  <sect2 id="install-postgres-download">
	<title>Download the PostgreSQL source</title>

	<para>	  

	  Download PostgreSQL 7.2.3 from the mirror closest to you. The list of
	  mirrors is at <ulink
	  url="http://www.postgresql.org/">http://www.postgresql.org</ulink>.
	  Download it to <computeroutput>/tmp</computeroutput>.

	</para>

	<para>
	  As <computeroutput>root</computeroutput>, unpack it into
	  <computeroutput>/usr/local/src</computeroutput>
	</para>

	<programlisting>
joeuser:~$ su -
Password: ***********
root:~# cd /usr/local/src
root:/usr/local/src# tar xzf /tmp/postgresql-7.2.3.tar.gz</programlisting>

  </sect2>

  <sect2 id="install-postgres-user">
	<title>Create the Postgres user</title>
	<para>
	  Still as <computeroutput>root</computeroutput>, create a user and
	  group (if you haven't done so before) for PostgreSQL. This is the
	  account that PostgreSQL will run as since it will not run as
	  root. Also give the <computeroutput>postgres</computeroutput> user a
	  password:
	</para>

	<programlisting>
root:~# groupadd web
root:~# useradd -g web -d /usr/local/pgsql postgres 
root:~# passwd postgres

root:~# mkdir -p /usr/local/pgsql
root:~# chown -R postgres.web /usr/local/pgsql /usr/local/src/postgresql-7.2.3
root:~# chmod 750 /usr/local/pgsql
root:~# exit
logout
joeuser:~$ su - postgres
Password: ***********</programlisting>
  </sect2>

  <sect2 id="install-postgres-env">
	<title>Set up postgres's environment variables</title>
	<para>	  
	  Edit <computeroutput>/usr/local/pgsql/.bash_profile</computeroutput>
	  so it looks like this:
	</para>

	<programlisting>
LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/pgsql/lib
PATH=$PATH:/usr/local/pgsql/bin

export PATH LD_LIBRARY_PATH</programlisting>

	<para>

	  Logout and login again as
	  <computeroutput>postgres</computeroutput>. Use the
	  <computeroutput>echo</computeroutput> command to make sure that
	  <computeroutput>/usr/local/pgsql/bin</computeroutput> is now in your
	  PATH

	</para>

	<programlisting>
postgres:~$ exit
logout
joeuser:~$ su - postgres
Password: ************
postgres:~$ echo $PATH
/usr/local/bin:/usr/bin:/bin: ... :/usr/local/pgsql/bin</programlisting>
  </sect2>

  <sect2 id="install-postgres-compile" xreflabel="Compile PostgreSQL">
	<title>Compile and install PostgreSQL</title>
	<para>

	  First, we run <computeroutput>./configure</computeroutput> to set the
	  compilation options automatically. This is the point at which you can
	  configure PostgreSQL in various ways. For example, if you want to
	  enable Unicode support, add the flags
	  <computeroutput>--enable-locale</computeroutput> and
	  <computeroutput>--enable-multibyte</computeroutput>. If you want to
	  see what the other possibilities are, run <computeroutput>./configure
	  --help</computeroutput>.

	</para>

	<programlisting>
postgres:~$ cd /usr/local/src/postgresql-7.2.3
postgres:/usr/local/src/postgresql-7.2.3$ ./configure
postgres:/usr/local/src/postgresql-7.2.3$ make all</programlisting>

	<para>

	  Compilation will take a while (about 10 minutes). Once it's done, you
	  will see the following message:

	</para>

	<programlisting>
All of PostgreSQL is successfully made. Ready to install.</programlisting>

	<para>

	  Next, we'll install PostgreSQL. If all is successful, you'll see the
	  following <quote>Thank You</quote> message.

	</para>

	<programlisting>
postgres:/usr/local/src/postgresql-7.2.3$ make install
...
Thank you for choosing PostgreSQL, the most advanced open source database engine.</programlisting>
  </sect2>

  <sect2 id="install-postgres-openfts">
	<title>Prepare PostgreSQL for OpenFTS</title>

	<para>
	  OpenFTS is the module that provides full text search to OpenACS
	  &version;. We won't be installing it until later, but since it needs
	  a special PostgreSQL module called 'tsearch', we'll install it now.
	</para>
	  
	<programlisting>
postgres:/usr/local/src/postgresql-7.2.3$ cd contrib/tsearch
postgres:/usr/local/src/postgresql-7.2.3/contrib/tsearch$ make
postgres:/usr/local/src/postgresql-7.2.3/contrib/tsearch$ make install</programlisting>
  </sect2>

  <sect2 id="install-postgres-startup">
	<title>Start PostgreSQL</title>

	<para>

	  The <computeroutput>initdb</computeroutput> command initializes the
	  database. <computeroutput>pg_ctl</computeroutput> is used to start up
	  PostgreSQL.
	
	</para>

	<programlisting>
postgres:/usr/local/src/postgresql-7.2.3/contrib/tsearch$ cd
postgres:~$ /usr/local/pgsql/bin/initdb -D /usr/local/pgsql/data
postgres:~$ /usr/local/pgsql/bin/pg_ctl -D /usr/local/pgsql/data -l /usr/local/pgsql/data/server.log start
postmaster successfully started</programlisting>

	<para>

	  PostgreSQL errors will be logged in
	  <computeroutput>/usr/local/pgsql/data/server.log</computeroutput>

	</para>
  </sect2>

  <sect2 id="install-postgres-plpgsql">
	<title>Set up plpgsql and allow your user to have access</title>
	<para>

	  Next, we'll install plpgsql into our PostgreSQL installation so that
	  we can use stored procedures. We'll also create a database user named
	  <computeroutput>joeuser</computeroutput> (replace with your own
	  username), so that you'll be able to access the database via
	  AOLserver.

	</para>

	<programlisting>
postgres:~$ createlang plpgsql template1
postgres:~$ # Test if we succeeded
postgres:~$ createlang -l template1
Procedural languages
  Name   | Trusted?  
---------+----------
 plpgsql | t        
(1 row)
postgres:~$ createuser <emphasis>joeuser</emphasis>
Shall the new user be allowed to create databases? (y/n) y
Shall the new user be allowed to create more new users? (y/n) y
CREATE USER</programlisting>

  </sect2>

  <sect2 id="install-postgres-test">
	<title>Test PostgreSQL</title>
	<para>

	  Create a database and try some simple commands. The output should be
	  as shown.

	</para>
	<programlisting>
postgres:~$ createdb mytestdb
CREATE DATABASE
postgres:~$ psql mytestdb
Welcome to psql, the PostgreSQL interactive terminal.

Type:  \copyright for distribution terms
       \h for help with SQL commands
       \? for help on internal slash commands
       \g or terminate with semicolon to execute query
       \q to quit

mytestdb=# select current_timestamp;
       timestamp        
------------------------
 2001-12-20 14:24:30-05
(1 row)

mytestdb=# create function test1() returns integer as 'begin return 1; end;' language 'plpgsql';
CREATE
mytestdb=# select test1();
 test1 
-------
     1
(1 row)

mytestdb=# \q
postgres:~$ dropdb mytestdb
DROP DATABASE</programlisting>

  </sect2>

  <sect2 id="install-postgres-startonboot">
	<title>Getting PostgreSQL to start on boot</title> 
	<para>

	  Download <ulink url="files/postgresql.txt">postgresql.txt</ulink> to
	  <computeroutput>/tmp</computeroutput>. Then follow the instructions
	  specific to your distribution:

	</para>

	<itemizedlist>
	  <listitem><para>Debian:</para>
		
		<programlisting>
postgres:~$ su -
Password: ***********
root:~# cp /tmp/postgresql.txt /etc/init.d/postgresql
root:~# chown root.root /etc/init.d/postgresql
root:~# chmod 700 /etc/init.d/postgresql</programlisting>

		<para>Test the script</para>

		<programlisting>
root:~# /etc/init.d/postgresql stop
Stopping PostgreSQL: ok</programlisting>

		<para>

		  If PostgreSQL successfully stopped, then use the following
		  command to make sure that the script is run appropriately at boot
		  and shutdown.

		</para>

		<programlisting>
root:~# update-rc.d postgresql defaults
 Adding system startup for /etc/init.d/postgresql ...
   /etc/rc0.d/K20postgresql -> ../init.d/postgresql
   /etc/rc1.d/K20postgresql -> ../init.d/postgresql
   /etc/rc6.d/K20postgresql -> ../init.d/postgresql
   /etc/rc2.d/S20postgresql -> ../init.d/postgresql
   /etc/rc3.d/S20postgresql -> ../init.d/postgresql
   /etc/rc4.d/S20postgresql -> ../init.d/postgresql
   /etc/rc5.d/S20postgresql -> ../init.d/postgresql
root:~# /etc/init.d/postgresql start
Starting PostgreSQL: ok
root:~# exit
postgres:~$ exit</programlisting>
	  </listitem>

	  <listitem><para>Red Hat:</para>
		
		<programlisting>
postgres:~$ su -
Password: ***********
root:~# cp /tmp/postgresql.txt /etc/rc.d/init.d/postgresql
root:~# chown root.root /etc/rc.d/init.d/postgresql
root:~# chmod 700 /etc/rc.d/init.d/postgresql</programlisting>

		<para>

		  Test the script.

		</para>

		<programlisting>
root:~# /etc/rc.d/init.d/postgresql stop
Stopping PostgreSQL: ok</programlisting>

		<para>

		  If PostgreSQL successfully stopped, then use the following
		  command to make sure that the script is run appropriately at boot
		  and shutdown.

		</para>

		<programlisting>
root:~# chkconfig --add postgresql
root:~# chkconfig --list postgresql
; You should see:
postgresql        0:off   1:off   2:on   3:on    4:on    5:on    6:off
root:~# /etc/rc.d/init.d/postgresql start
Starting PostgreSQL: ok
root:~# exit
postgres:~$ exit</programlisting>
	  </listitem>

	  <listitem><para>SuSE:</para>

		<note>
		  <para>

			I have received reports that SuSE 8.0 is different from
            previous versions. Instead of installing the boot scripts in
            <computeroutput>/etc/rc.d/init.d/</computeroutput>, they should
            be placed in <computeroutput>/etc/init.d/</computeroutput>. If
            you're using SuSE 8.0, delete the
            <computeroutput>rc.d/</computeroutput> part in each of the
            following commands.

          </para>
        </note>

        <programlisting>
postgres:~$ su -
Password: ***********
root:~# cp /tmp/postgresql.txt /etc/rc.d/init.d/postgresql
root:~# chown root.root /etc/rc.d/init.d/postgresql
root:~# chmod 700 /etc/rc.d/init.d/postgresql</programlisting>

        <para>

          Test the script.

        </para>

        <programlisting>
root:~# /etc/rc.d/init.d/postgresql stop
Stopping PostgreSQL: ok</programlisting>
        
        <para>

          If PostgreSQL successfully stopped, then use the following
          command to make sure that the script is run appropriately at boot
          and shutdown.

        </para>

        <programlisting>
root:~# cd /etc/rc.d/init.d
root:/etc/rc.d/init.d# ln -s /etc/rc.d/init.d/postgresql K20postgresql
root:/etc/rc.d/init.d# ln -s /etc/rc.d/init.d/postgresql S20postgresql  
root:/etc/rc.d/init.d# cp K20postgresql rc2.d
root:/etc/rc.d/init.d# cp S20postgresql rc2.d
root:/etc/rc.d/init.d# cp K20postgresql rc3.d
root:/etc/rc.d/init.d# cp S20postgresql rc3.d
root:/etc/rc.d/init.d# cp K20postgresql rc4.d
root:/etc/rc.d/init.d# cp S20postgresql rc4.d 
root:/etc/rc.d/init.d# cp K20postgresql rc5.d
root:/etc/rc.d/init.d# cp S20postgresql rc5.d
root:/etc/rc.d/init.d# rm K20postgresql
root:/etc/rc.d/init.d# rm S20postgresql</programlisting>

        <para>

          Test configuration.

        </para>

        <programlisting>
root:/etc/rc.d/init.d # cd
root:~ # /etc/rc.d/init.d/rc2.d/S20postgresql start
Starting PostgreSQL: ok
root:~ # exit</programlisting>
      </listitem>
    </itemizedlist>

    <para>

      From now on, PostgreSQL should start automatically each time you boot
      up and it should shutdown gracefully each time you shut down. (Note:
      Debian defaults to starting all services on runlevels 2-5. Red Hat
      defaults to starting services on 3-5. So, on Red Hat, PostgreSQL won't
      start on runlevel 2 unless you alter the above commands a
      little. This usually isn't a problem as Red Hat defaults to runlevel 3)

    </para>
  </sect2>

  <sect2 id="install-postgres-moreinfo">
    <title>Learn more about PostgreSQL</title>
    <para>

          Here are some links: 

    </para>
    
    <itemizedlist>
      <listitem><para>

          <ulink url="http://www.postgresql.org/idocs/">Official PostgreSQL
          Docs</ulink>

        </para></listitem>

      <listitem><para>

          <ulink
          url="http://pascal.scheffers.net/openacs/pgupdate/">Migrating
          from 7.0 to 7.1</ulink>

        </para></listitem>

      <listitem><para>

          <ulink
            url="http://techdocs.postgresql.org">techdocs.postgresql.org</ulink>

        </para></listitem>

      <listitem><para>
          
          <ulink
        url="http://www.linuxjournal.com/article.php?sid=4791">PostgreSQL
        Performance Tuning</ulink>

        </para></listitem>

    </itemizedlist>
  </sect2>

  <para><phrase role="cvstag">($Id$)</phrase></para>

</sect1>
<!--
   Local Variables:
   sgml-parent-document: ("../index.xml" "book" "sect1")
   End:
-->
