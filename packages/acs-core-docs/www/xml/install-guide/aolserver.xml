<sect1 id="aolserver" xreflabel="Install AOLserver 3.3+ad13">
  <title>Install AOLserver 3.3+ad13</title>

  <authorblurb>
    by <ulink url="mailto:vinod@kurup.com">Vinod Kurup</ulink>
  </authorblurb>

  <sect2 id="install-aolserver-download" xreflabel="Download AOLServer">
    <title>Download the Distribution</title>

    <para>
      Mat Kovach is graciously maintaining an AOLServer distribution that
      includes all the patches and modules needed to run OpenACS &version;. These
      instructions will describe how to install using his source
      distribution. He also has binaries for SuSE 7.3 and OpenBSD 2.8 (and
      perhaps more to come), currently located at <ulink
      url="http://uptime.openacs.org/aolserver-openacs/">uptime.openacs.org</ulink>.
    </para>

    <para>
      It's also possible to download all the pieces and patches yourself:
    </para>

    <itemizedlist>
      <listitem><para>
          AOLServer is available at <ulink
        url="http://aolserver.com">aolserver.com</ulink> 
        </para></listitem>

      <listitem><para> 
          ArsDigita's AOLServer distribution (including
          internationalization patches, nscache, nsrewrite, nssha1 and the
          oracle driver) is available at <ulink
          url="http://www.arsdigita.com/acs-repository/download-verify?version_id=2081">arsdigita.com</ulink>
          </para></listitem>

      <listitem><para>

          The OpenACS PostgreSQL driver (nspostgres.so) is available from
          <ulink
          url="http://prdownloads.sourceforge.net/aolserver/nspostgres-3.5beta1.tar.gz?download">SourceForge. If
          you do decide to use nspostgres.so, you have to remember to
          change the AOLserver config file to point to nspostgres.so
          instead of postgres.so. This guide uses Mat Kovach's distro
          (i.e. postgres.so)</ulink>

        </para></listitem>

      <listitem><para>
          nsxml is available at <ulink
            url="http://acs-misc.sourceforge.net/dl/nsxml.tgz">http://acs-misc.sourceforge.net</ulink>. 
        </para></listitem>

      <listitem><para>
          The patch that makes <computeroutput>exec</computeroutput> work
          on BSD is available at <ulink
          url="http://sourceforge.net/tracker/index.php?func=detail&amp;aid=415475&amp;group_id=3152&amp;atid=303152">sourceforge.net</ulink>
        </para></listitem>

      <listitem><para>
          The patch that makes <computeroutput>ns_uuencode</computeroutput>
          work for binary files is available at <ulink
          url="http://sourceforge.net/tracker/index.php?func=detail&amp;aid=474259&amp;group_id=3152&amp;atid=303152">sourceforge.net</ulink>
        </para></listitem> 

      <listitem><para>
          The patch that makes AOLServer respect the
          <computeroutput>-g</computeroutput> flag is available at <ulink
          url="http://sourceforge.net/tracker/index.php?func=detail&amp;aid=509413&amp;group_id=3152&amp;atid=303152">sourceforge.net</ulink>
        </para></listitem>

    </itemizedlist>

    <para>

      .... or just Download <ulink
      url="http://uptime.openacs.org/aolserver-openacs/aolserver3.3ad13-oacs1-beta-src.tar.gz">Mat's
      AOLServer distribution</ulink> to
      <computeroutput>/tmp</computeroutput>

    </para>

    <programlisting>
joeuser:~$ cd /tmp
joeuser:/tmp$ wget -c http://uptime.openacs.org/aolserver-openacs/aolserver3.3ad13-oacs1-beta-src.tar.gz
joeuser:/tmp$ cd</programlisting>

    <para>

      As <computeroutput>root</computeroutput>, untar
      <computeroutput>aolserver3.3ad13-oacs1-beta-src.tar.gz</computeroutput>
      into <computeroutput>/usr/local/src</computeroutput>

    </para>
        
    <programlisting>
joeuser:~$ su -
Password: **********
root:~# cd /usr/local/src
root:/usr/local/src# tar xzf /tmp/aolserver3.3ad13-oacs1-beta-src.tar.gz
root:/usr/local/src# chown -R root.root aolserver</programlisting>
  </sect2>

  <sect2 id="install-aolserver-user-accounts">
    <title>Set up your user account</title>

    <para>

      AOLserver needs to be started as the root user if you want to use
      port 80. Once it starts, though, it will drop the root privileges and
      run as another user, which you must specify on the command line. It's
      important that this user has as few privileges as possible. Why?
      Because if an intruder somehow breaks in through AOLserver, you don't
      want him to have any ability to do damage to the rest of your
      server. At the same time, AOLserver needs to have write access to
      some files on your system in order for OpenACS to function
      properly. So, we'll run AOLserver as the
      <computeroutput>nobody</computeroutput> user and the
      <computeroutput>web</computeroutput> group. We'll add your regular
      user account to the <computeroutput>web</computeroutput> group and
      make sure that OpenACS files are group readable and writable.

    </para>

    <itemizedlist>
      <listitem><para>
          Run these commands: 
        </para>

        <programlisting>
root:/usr/local/src# cd
root:~# groupadd web
root:~# adduser <emphasis>joeuser</emphasis> web
root:~# exit</programlisting>
      </listitem>

    </itemizedlist>

    <para>

      Next, we'll set up our environment variables. Add the following lines
      to your <computeroutput>/home/joeuser/.bash_profile</computeroutput>:

    </para>

    <programlisting>
joeuser:~$ emacs .bash_profile</programlisting>

    <para>

      Add the first set of lines, if you're using Oracle. The 2nd set of
      lines, if you're using PostgreSQL.  <emphasis>Oracle Note:</emphasis>
      These environment variables are specific for a local Oracle
      installation communicating via IPC. If you are connecting to a remote
      Oracle installation, you'll need to adjust these appropriately. Also,
      make sure that the '8.1.7' matches your Oracle version.

    </para>

    <programlisting>
# For Oracle
export ORACLE_BASE=/ora8/m01/app/oracle
export ORACLE_HOME=$ORACLE_BASE/product/8.1.7
export PATH=$PATH:$ORACLE_HOME/bin
export LD_LIBRARY_PATH=$ORACLE_HOME/lib:/lib:/usr/lib
export ORACLE_SID=ora8
export ORACLE_TERM=vt100
export ORA_NLS33=$ORACLE_HOME/ocommon/nls/admin/data
   
# For PostgreSQL
export PATH=$PATH:/usr/local/pgsql/bin
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/pgsql/lib</programlisting>

    <para>

      Be absolutely certain that you have entered these lines correctly and
      that you have saved the file - a slight error in these lines can lead
      to many inscrutable error messages. Logout and log back in so these
      settings will take effect. Use the
      <computeroutput>echo</computeroutput> command to be sure that the
      environment variables have been properly assigned.

    </para>

    <programlisting>
joeuser:~$ exit
LOGIN: joeuser
Password: *********
joeuser:~$ echo $PATH
...some other directory paths...:/usr/local/pgsql/bin
joeuser:~$ echo $LD_LIBRARY_PATH
:/usr/local/pgsql/lib</programlisting>

    <para>

      Note: The result should be different if you're using Oracle.
      <computeroutput>/ora8/m01/app/oracle/product/8.1.7</computeroutput>
      should have been in <computeroutput>$PATH</computeroutput>.

    </para>
  </sect2>

  <sect2 id="install-aolserver-libxml2" xreflabel="Install libxml2">
    <title>Install libxml2 &amp; headers</title>

    <para>

      In order for nsxml to compile, you need libxml2
      (available from <ulink
        url="http://xmlsoft.org">http://xmlsoft.org</ulink>). On Debian,
      this can be installed by doing <computeroutput>apt-get install
        libxml2-dev</computeroutput>. Users of other distributions can
      download rpms from <ulink
        url="http://rpmfind.net/linux/rpm2html/search.php?query=libxml2">rpmfind.net</ulink>. You'll
      need the <computeroutput>libxml2</computeroutput> and
      <computeroutput>libxml2-devel</computeroutput> packages.
    </para>
  </sect2>

  <sect2 id="install-aolserver-compile" xreflabel="Compile AOLServer">
    <title>Compile and install AOLserver</title>

    <itemizedlist>
      <listitem><para>Prepare the distribution. You need to be root.</para>

        <programlisting>
joeuser:~$ su -p
Password: ********
root:~# mkdir -p /usr/local/aolserver
root:~# cd /usr/local/src/aolserver
root:/usr/local/src/aolserver# ./conf-clean
cat: BUILD-MODULES: No such file or directory
Done.</programlisting>
      </listitem>

      <listitem><para>

          Put the name of the driver(s) that you want into
          <computeroutput>conf-db</computeroutput>. This can be
          <computeroutput>"postgresql"</computeroutput>,
          <computeroutput>"oracle"</computeroutput>, or the word
          <computeroutput>"both"</computeroutput> if you want both drivers
          installed.

        </para>

        <programlisting>
root:/usr/local/src/aolserver# echo "postgresql" > conf-db</programlisting>
      </listitem>

      <listitem><para>

          <computeroutput>conf-inst</computeroutput> should contain the
          location where AOLserver is to be installed. This defaults to
          <computeroutput>/usr/local/aolserver</computeroutput>, so we
          don't need to change it.

        </para></listitem>

      <listitem><para>

          <computeroutput>conf-make</computeroutput> should contain the
          name of the GNU Make command on your system. It defaults to
          <computeroutput>gmake</computeroutput>. You may need to change
          this to <computeroutput>make</computeroutput>.
        </para>

        <programlisting>
root:/usr/local/src/aolserver# echo "make" > conf-make</programlisting>
      </listitem>

      <listitem><para>
          If you're going to be installing the Postgresql driver, you'll
          have to adjust the makefile first. This will hopefully be cleaned
          up in future versions of this distribution.
        </para>

        <programlisting>
root:/usr/local/src/aolserver# emacs pgdriver/makefile</programlisting>

        <para>
          Edit the lines containing PGLIB and PGINC so they look like this:
        </para>
          
        <programlisting>
PGINC=/usr/local/pgsql/include

PGLIB=/usr/local/pgsql/lib</programlisting>

        </listitem>

      <listitem><para>Compile and install AOLserver and modules</para>
        <programlisting>
root:/usr/local/src/aolserver# ./conf</programlisting>

        <para>

          This takes about 5 minutes. All of the results are logged to
          files in
          <computeroutput>/usr/local/src/aolserver/log</computeroutput>. Make
          sure to check these files to see if any errors occurred.

        </para>
      </listitem>
    </itemizedlist>

  </sect2>

  <sect2 id="install-aolserver-permissions" xreflabel="Set File Permissions">
    <title>Set File Permissions</title>

    <para>

      In order to test AOLserver, we'll run it using the sample-config.tcl
      file provided in the AOLserver distribution. We need to adjust
      permissions a little since AOLserver needs to be able to write its
      logs properly.

      <programlisting>
root:/usr/local/src/aolserver# cd /usr/local/aolserver
root:/usr/local/aolserver# chown -R root.web log servers
root:/usr/local/aolserver# chmod -R g+w log servers
root:/usr/local/aolserver# ls -l
  drwxr-sr-x    8 root     staff        1024 Nov 12 01:35 .
  drwxrwsr-x   12 root     staff        1024 Nov 12 01:25 ..
  drwxr-xr-x    2 root     staff        1024 Nov 12 01:36 bin
  drwxr-xr-x    2 root     staff        1024 Jun 11  2001 include
  drwxr-xr-x    3 root     staff        1024 Nov 12 01:36 lib
  drwxrwxr-x    2 root     web          1024 Nov 12 01:45 log
  drwxr-xr-x    3 root     staff        1024 Nov 12 01:35 modules
  -rw-r--r--    1 root     staff        7320 Mar 31  2001 sample-config.tcl
  drwxrwxr-x    3 root     web          1024 Nov 12 01:35 servers</programlisting>
    </para>
  </sect2>

  <sect2 id="install-aolserver-test" xreflabel="Test AOLserver">
    <title>Test AOLserver</title>

    <itemizedlist>
      <listitem><para> 

          Now, we'll run a quick test to ensure AOLserver is running
          correctly. We'll use the sample config file provided with
          AOLserver. This file will attempt to guess your IP address and
          hostname. It will then start up the server at port 8000 of that
          IP address.

        </para>

        <programlisting>
root:/usr/local/aolserver# ./bin/nsd -t sample-config.tcl -u nobody -g web</programlisting>

        <para>

          As the AOLserver daemon starts up, you should see a few normal
          warnings (listed below), which are safe to ignore.

        </para>

        <programlisting>
Warning: nsd.tcl: nsssl not loaded -- key/cert files do not exist.
Warning: nsd.tcl: nscp not loaded -- user/password is not set.</programlisting>

        <para>        

          The first warning means that the server is missing files for
          running <computeroutput>ssl</computeroutput>, a necessary module
          for encrypted HTTPS. See Scott Goodwin's <ulink
          url="http://scottg.net/webtools/opennsd/modules/nsopenssl/">excellent
          documentation</ulink> if you want to set up SSL. The second
          warning means that the AOLserver control panel, a special module
          for administering AOLserver, could not be loaded. If you're
          interested in configuring nscp, please see the <ulink
          url="http://www.aolserver.com/docs">AOLserver
          documentation</ulink>.

        </para>

      </listitem>

      <listitem><para>

          Test to see if AOLserver is working by starting
          <computeroutput>Mozilla</computeroutput> or
          <computeroutput>Lynx</computeroutput>, and surfing over to your
          web page: 

        </para>

        <programlisting>
root:~# lynx localhost:8000</programlisting>

        <para>

          You should see a &quot;Welcome to AOLserver&quot; page. If this
          doesn't work, try going to
          <computeroutput>http://127.0.0.1:8000/</computeroutput>. If this
          still doesn't work, check out the <xref
          linkend="install-aolserver-troubleshooting"/> section below.

        </para></listitem>

      <listitem><para>

          Shutdown the test server: 

        </para>
        <programlisting>
root:~# killall nsd</programlisting>

        <para>

          The <computeroutput>killall</computeroutput> command will kill
          all processes with the name <computeroutput>nsd</computeroutput>,
          but clearly this is not a good tool to use for managing your
          services in general. We cover this topic in the <xref
          linkend="install-openacs-keepalive"/> section.

        </para>
      </listitem>
    </itemizedlist>

  </sect2>
  
  <sect2 id="install-aolserver-troubleshooting" xreflabel="Troubleshooting AOLServer">
    <title>Troubleshooting the AOLserver Install</title>

    <para>

      If you can't view the welcome page, it's likely there's a
      problem with your server configuration. Start by viewing your
      AOLserver log, which is in
      <computeroutput>/usr/local/aolserver/log/server.log</computeroutput>.
      You should also try to find lines of the form:

    </para>
    <programlisting>
[01/Jun/2000:12:11:20][5914.2051][-nssock-] Notice: nssock: listening on http://localhost.localdomain:8000 (127.0.0.1:8000)
[01/Jun/2000:12:11:20][5914.2051][-nssock-] Notice: accepting connections</programlisting>

    <para>

      If you can find these lines, try entering the URL the server is
      listening on. If you cannot find these lines, there must be an error
      somewhere in the file. Search for lines beginning with the word
      <computeroutput>Error</computeroutput> instead of
      <computeroutput>Notice</computeroutput>.

    </para>

    <para>

      The <computeroutput>sample-config.tcl</computeroutput> file grabs
      your address and hostname from your OS settings.

    </para>

    <programlisting>
set hostname        [ns_info hostname]
set address         [ns_info address]</programlisting>

    <para>

      If you get an error that nssock can't get the requested address, you
      can set these manually. If you type 0.0.0.0, AOLserver will try to
      listen on all available addresses.

    </para>

    <programlisting>
set hostname        [ns_info hostname]
#set address         [ns_info address]
set address 0.0.0.0</programlisting>

  </sect2>

  
  <para><phrase role="cvstag">($Id$)</phrase></para>

</sect1>
<!--
   Local Variables:
   sgml-parent-document: ("../index.xml" "book" "sect1")
   End:
-->
