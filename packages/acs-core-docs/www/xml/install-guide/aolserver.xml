<sect1 id="aolserver" xreflabel="Install AOLserver 3.3+ad13">
  <title>Install AOLserver 3.3+ad13</title>

  <authorblurb>
    by <ulink url="mailto:vinod@kurup.com">Vinod Kurup</ulink>
  </authorblurb>

  <para>This page assumes you have downloaded aolserver to  to 
<computeroutput>/tmp/aolserver3.3oacs1.tar.gz</computeroutput>.  If not,
<link linkend="source-aolserver">get it</link>.  It also assumes you are following the &version;-P or &version;-O Reference Platform installation, using Red Hat 8.0.  Places where other systems are different are noted.</para>

  <orderedlist>
    <listitem>
      <para>
      As <computeroutput>root</computeroutput>, untar
      <computeroutput>aolserver3.3oacs1.tar.gz</computeroutput>
      into <computeroutput>/usr/local/src</computeroutput>.

    </para>
        
      <screen>[root@yourserver root]# <userinput>cd /usr/local/src</userinput>
[root@yourserver src]# <userinput>tar xzf /tmp/aolserver3.3oacs1.tar.gz</userinput>
[root@yourserver src]#
<action>cd /usr/local/src
tar xzf /tmp/aolserver3.3oacs1.tar.gz</action></screen>
    </listitem>
    
    <listitem id="install-aolserver-compile" xreflabel="Compile AOLserver">
      <para>Compile and install AOLserver.  First, prepare the installation directory and the source code.  The message about BUILD-MODULES can be ignored.</para>
      <screen>root@yourserver root]# <userinput>mkdir -p /usr/local/aolserver</userinput>
[root@yourserver root]# <userinput>cd /usr/local/src/aolserver</userinput>
[root@yourserver aolserver]# <userinput>./conf-clean</userinput>
cat: BUILD-MODULES: No such file or directory
Done.
[root@yourserver aolserver]#<action>mkdir -p /usr/local/aolserver
cd /usr/local/src/aolserver
./conf-clean</action></screen>
      <para>
          If you are using Oracle, edit
          <computeroutput>conf-db</computeroutput> and change
          <computeroutput>postgresql</computeroutput> to
          <computeroutput>oracle</computeroutput>, or to the word
          <computeroutput>both</computeroutput> if you want both drivers
          installed.
        </para>

    <para><computeroutput>conf-inst</computeroutput> should contain the
          location where AOLserver is to be installed.  Overwrite the
          tarball's default value with our default value, <computeroutput>/usr/local/aolserver</computeroutput>:</para>
      <screen>[root@yourserver aolserver]# <userinput>echo "/usr/local/aolserver" > conf-inst</userinput>
[root@yourserver aolserver]#</screen>

      <para><computeroutput>conf-make</computeroutput> should contain the
          name of the GNU Make command on your system. It defaults to
          <computeroutput>gmake</computeroutput>.  Verify that gmake is installed:</para>
      <screen>[root@yourserver aolserver]# <userinput>gmake -v</userinput>
GNU Make version 3.79.1, by Richard Stallman and Roland McGrath.
Built for i386-redhat-linux-gnu
Copyright (C) 1988, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 2000
        Free Software Foundation, Inc.
This is free software; see the source for copying conditions.
There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE.

Report bugs to &lt;bug-make@gnu.org&gt;.

[root@yourserver aolserver]# </screen>
      <para>If you don't get similar results, including an equal or higher version number to 3.79.1, install gmake or check your aliases.</para>
      <para>Set an environment variable that the nspostgres driver
      Makefile needs to compile correctly and run <computeroutput>conf</computeroutput>, which compiles AOLserver and the default modules and installs them.</para>
      <screen>[root@yourserver aolserver]# <userinput>export POSTGRES=/usr/local/pgsql; ./conf</userinput>
Building in /usr/local/aolserver
with the following modules:
aolserver
nscache
nsrewrite
nssha1
nsxml
pgdriver
==================================================================
Starting Build Sat Mar  8 10:28:26 PST 2003
Running gmake in aolserver/; output in log/aolserver.log
<emphasis>(several minute delay here)</emphasis>
Running gmake in nscache/; output in log/nscache.log
Running gmake in nsrewrite/; output in log/nsrewrite.log
Running gmake in nssha1/; output in log/nssha1.log
Running gmake in nsxml/; output in log/nsxml.log
Running gmake in nspostgres/; output in log/nspostgres.log
Creating  ...
==================================================================
Done Building Sat Mar  8 10:31:35 PST 2003
[root@yourserver aolserver]# </screen>
          
          <para>
          This takes about 5 minutes. All of the results are logged to
          files in
          <computeroutput>/usr/local/src/aolserver/log</computeroutput>.  If you run into problems running AOLserver, check these files for build errors.</para>
          
        </listitem>
        
        
        <listitem>
          <para>Add a database-specific wrapper script.  This script
	  sets database environment variables before starting
	  AOLserver; this allows the AOLserver instance can
	  communicate with the database.  There is one script each for
	  Oracle and PostGreSQL.  They don't conflict, so if you plan
	  to use both databases, install both.</para>	
          <itemizedlist>
            <listitem>
              <para>Oracle</para>
              <screen>[root@yourserver aolserver]# <userinput>cd /usr/local/aolserver/bin</userinput>
[root@yourserver bin]# <userinput>cp /tmp/openacs-4.6.2/packages/acs-core-docs/www/files/nsd-oracle.txt ./nsd-oracle</userinput>
[root@yourserver bin]# <userinput>chmod 750 nsd-oracle</userinput>
[root@yourserver bin]#
<action>cd /usr/local/aolserver/bin
cp /tmp/openacs-4.6.2/packages/acs-core-docs/www/files/nsd-oracle.txt ./nsd-oracle
chmod 750 nsd-oracle</action></screen>
            </listitem>
            <listitem>
              <para>PostGreSQL</para>
              <screen>[root@yourserver aolserver]# <userinput>cd /usr/local/aolserver/bin</userinput>
[root@yourserver bin]# <userinput>cp /tmp/openacs-4.6.2/packages/acs-core-docs/www/files/nsd-postgres.txt ./nsd-postgres</userinput>
[root@yourserver bin]# <userinput>chmod 755 nsd-postgres</userinput>
[root@yourserver bin]#
<action>cd /usr/local/aolserver/bin
cp /tmp/openacs-4.6.2/packages/acs-core-docs/www/files/nsd-postgres.txt ./nsd-postgres
chmod 755 nsd-postgres</action></screen>
            </listitem>
          </itemizedlist>
        </listitem>
        <listitem>
          <para>OPTIONAL - install nsopenssl.  This AOLserver module is required if you want people to connect to your site via https.  These commands compile nsopenssl and install it, along with a tcl helper script to handle https connections.  You will also need ssl certificates.  Because those should be different for each server service, you won't need <link linkend="ssl-certificates">those instructions</link> until later.  You will need the <link linkend="nsopenssl-download">nsopenssl tarball</link> in <computeroutput>/tmp</computeroutput>.</para>
      <screen>[root@yourserver bin]#<userinput> cd /usr/local/src/aolserver</userinput>
[root@yourserver aolserver]# <userinput>tar xzf /tmp/nsopenssl-2.1.tar.gz</userinput>
[root@yourserver aolserver]# <userinput>cd nsopenssl-2.1</userinput>
[root@yourserver nsopenssl-2.1]# <userinput>make OPENSSL=/usr/local/ssl</userinput>
gcc -I/usr/local/ssl/include -I../aolserver/include -D_REENTRANT=1 -DNDEBUG=1 -g -fPIC -Wall -Wno-unused -mcpu=i686 -DHAVE_CMMSG=1 -DUSE_FIONREAD=1 -DHAVE_COND_EINTR=1   -c -o nsopenssl.o nsopenssl.c
<emphasis>(many lines omitted)</emphasis>
gcc -shared -nostartfiles -o nsopenssl.so nsopenssl.o config.o init.o ssl.o thread.o tclcmds.o -L/usr/local/ssl/lib -lssl -lcrypto
[root@yourserver nsopenssl-2.1]# <userinput>cp nsopenssl.so /usr/local/aolserver/bin</userinput>
[root@yourserver nsopenssl-2.1]# <userinput>cp https.tcl /usr/local/aolserver/modules/tcl/</userinput>
[root@yourserver nsopenssl-2.1]#
<action>cd /usr/local/src/aolserver
tar xzf /tmp/nsopenssl-2.1.tar.gz 
cd nsopenssl-2.1 
make OPENSSL=/usr/local/ssl 
cp nsopenssl.so /usr/local/aolserver/bin 
cp https.tcl /usr/local/aolserver/modules/tcl/</action></screen>
    </listitem>

        <listitem id="install-openfts" xreflabel="Install OpenFTS">
          <para>OPTIONAL - install OpenFTS.  If you want full text search,
      and you are running PostGreSQL, install this module to support
      FTS.  You will need the <link linkend="openfts-download">openfts
      tarball</link> in <computeroutput>/tmp</computeroutput>.</para>
          <orderedlist>
            <listitem>
              <para>Install Tsearch.  This is a PostGreSQL module that
	  OpenFTS requires.</para>
              <screen>[root@yourserver root]# <userinput>su - postgres</userinput>
[postgres@yourserver pgsql]$ <userinput>cd /usr/local/src/postgresql-7.2.3/contrib/tsearch/</userinput>
[postgres@yourserver tsearch]$ <userinput>make</userinput>
sed 's,MODULE_PATHNAME,$libdir/tsearch,g' tsearch.sql.in >tsearch.sql
/usr/bin/flex  -8 -Ptsearch_yy -o'parser.c' parser.l
(many lines omitted)
rm -f libtsearch.so
ln -s libtsearch.so.0.0 libtsearch.so
[postgres@yourserver tsearch]$ make install
mkdir /usr/local/pgsql/share/contrib
mkdir /usr/local/pgsql/doc/contrib
(2 lines omitted)
/bin/sh ../../config/install-sh -c -m 755 libtsearch.so.0.0 /usr/local/pgsql/lib/tsearch.so
[postgres@yourserver tsearch]$ exit
logout

[root@yourserver root]#
<action>su - postgres
cd /usr/local/src/postgresql-7.2.3/contrib/tsearch
make
make install
exit</action></screen>
            </listitem>
            <listitem>
              <para>Unpack the OpenFTS tarball and compile and install
              the driver.</para>
              <screen>[root@yourserver root]# <userinput>cd /usr/local/src</userinput>
[root@yourserver src]# <userinput>tar xzf /tmp/Search-OpenFTS-tcl-0.3.2.tar.gz</userinput>
[root@yourserver src]# <userinput>cd /usr/local/src/Search-OpenFTS-tcl-0.3.2/</userinput>
[root@yourserver Search-OpenFTS-tcl-0.3.2]# <userinput>./configure --with-aolserver-src=/usr/local/src/aolserver/aolserver --with-tcl=/usr/lib/</userinput>
checking prefix... /usr/local
checking for gcc... gcc
<emphasis>(many lines omitted)</emphasis>
configure: creating ./config.status
config.status: creating Makefile.global
[root@yourserver Search-OpenFTS-tcl-0.3.2]#<userinput> make</userinput>
(cd parser; make all)
make[1]: Entering directory `/usr/local/src/Search-OpenFTS-tcl-0.3.2/parser'
<emphasis>(many lines omitted)</emphasis>
packages provided were {Lingua::Stem::Snowball 0.3.2}
processed fts_base_snowball.tcl
[root@yourserver Search-OpenFTS-tcl-0.3.2]# <userinput>cd aolserver</userinput>
[root@yourserver aolserver]# <userinput>make</userinput>
gcc -c -fPIC  -DPACKAGE=\"OPENFTS\" -DVERSION=\"0.3.2\" -DHAVE_UNISTD_H=1 -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STR
<emphasis>(many lines omitted)</emphasis>
n_stem.o italian_stem.o norwegian_stem.o portuguese_stem.o russian_stem.o nsfts.o  -o nsfts.so
[root@yourserver aolserver]# <userinput>cp nsfts.so /usr/local/aolserver/bin/</userinput>
[root@yourserver aolserver]#
<action>cd /usr/local/src 
tar xzf /tmp/Search-OpenFTS-tcl-0.3.2.tar.gz
cd /usr/local/src/Search-OpenFTS-tcl-0.3.2/
./configure --with-aolserver-src=/usr/local/src/aolserver/aolserver --with-tcl=/usr/lib/
make
cd aolserver
make
cp nsfts.so /usr/local/aolserver/bin
</action></screen>
            </listitem>
            <listitem>
              <para>Build some supplemental modules.</para>
<screen>[root@yourserver aolserver]# <userinput>cd ..</userinput>
[root@yourserver Search-OpenFTS-tcl-0.3.2]# <userinput>cp -r pgsql_contrib_openfts /usr/local/src/postgresql-7.2.3/contrib</userinput>
[root@yourserver Search-OpenFTS-tcl-0.3.2]# <userinput>cd /usr/local/src/postgresql-7.2.3/contrib/pgsql_contrib_openfts</userinput>
[root@yourserver pgsql_contrib_openfts]#<userinput> make</userinput>
sed 's,MODULE_PATHNAME,$libdir/openfts,g' openfts.sql.in >openfts.sql
gcc -O2 -Wall -Wmissing-prototypes -Wmissing-declarations -fpic -I. -I../../src/include   -c -o openfts.o openfts.c
gcc -shared -o openfts.so openfts.o
rm openfts.o
[root@yourserver pgsql_contrib_openfts]# <userinput>su postgres</userinput>
[postgres@yourserver pgsql_contrib_openfts]$ <userinput>make install</userinput>
/bin/sh ../../config/install-sh -c -m 644 openfts.sql /usr/local/pgsql/share/contrib
/bin/sh ../../config/install-sh -c -m 755 openfts.so /usr/local/pgsql/lib
/bin/sh ../../config/install-sh -c -m 644 ./README.openfts /usr/local/pgsql/doc/contrib
[postgres@yourserver pgsql_contrib_openfts]$<userinput> exit</userinput>
[root@yourserver pgsql_contrib_openfts]#
<action>cd ..
cp -r pgsql_contrib_openfts /usr/local/src/postgresql-7.2.3/contrib
cd /usr/local/src/postgresql-7.2.3/contrib/pgsql_contrib_openfts
make
su postgres
make install
exit</action></screen>
            </listitem>
          </orderedlist>
        </listitem>
        <listitem id="install-aolserver-permissions" xreflabel="Set File Permissions">
      <para>In order to test AOLserver, we'll run it using the
      sample-config.tcl file provided in the AOLserver distribution,
      under the nobody user and <computeroutput>web</computeroutput>
      group.  The sample-config.tcl configuration writes to the
      default log locations, so we need to give it permission to do so
      or it will fail.  Grant the <computeroutput>web</computeroutput>
      group permission to write to
      <computeroutput>/usr/local/aolserver/log</computeroutput> and
      <computeroutput>/usr/local/aolserver/servers</computeroutput>.</para>
      <screen>[root@yourserver root]# <userinput>cd /usr/local/aolserver</userinput>
[root@yourserver aolserver]# <userinput>chown -R root.web log servers</userinput>
[root@yourserver aolserver]# <userinput>chmod -R g+w log servers</userinput>
[root@yourserver aolserver]# <userinput>ls -l</userinput>
total 32
drwxr-sr-x    2 root     root         4096 Mar  8 12:57 bin
drwxr-xr-x    3 root     root         4096 Mar  8 10:34 include
drwxr-sr-x    3 root     root         4096 Mar  8 10:34 lib
drwxrwsr-x    2 root     web          4096 Mar  8 10:31 log
drwxr-sr-x    3 root     root         4096 Mar  8 10:31 modules
-rw-r--r--    1 root     root         7320 Mar 31  2001 sample-config.tcl
drwxrwsr-x    3 root     web          4096 Mar  8 10:31 servers
[root@yourserver aolserver]#
<action>
cd /usr/local/aolserver
chown -R root.web log servers
chmod -R g+w log servers
ls -l</action></screen>

      <para>Now, we'll run a quick test to ensure AOLserver is running
          correctly. We'll use the sample config file provided with
          AOLserver. This file will attempt to guess your IP address and
          hostname. It will then start up the server at port 8000 of that
          IP address.</para>

      <screen>[root@yourserver aolserver]# <userinput>./bin/nsd -t sample-config.tcl -u nobody -g web</userinput>
[root@yourserver aolserver]# [08/Mar/2003:15:07:18][31175.8192][-main-] Notice: config.tcl: starting to read config file...
[08/Mar/2003:15:07:18][31175.8192][-main-] Warning: config.tcl: nsssl not loaded -- key/cert files do not exist.
[08/Mar/2003:15:07:18][31175.8192][-main-] Warning: config.tcl: nscp not loaded
-- user/password is not set.
[08/Mar/2003:15:07:18][31175.8192][-main-] Notice: config.tcl: finished reading
config file.</screen>

        <para>The first warning, about nsssl, can be ignored.  We won't be using nsssl; we'll be using nsopenssl instead, and we haven't fully configured it yet.  The nscp warning refers to the fact that, without a user and password in the config file, the administrative panel of AOLserver won't load.  We don't plan to use it and can ignore that error as well.  Any other warning or error is unexpected and probably a problem.</para>

      <para>

          Test to see if AOLserver is working by starting
          <computeroutput>Mozilla</computeroutput> or
          <computeroutput>Lynx</computeroutput> <emphasis>on the same
          computer</emphasis> and surfing over to your web page.  If
          you browse from another computer and the sample config file
          didn't guess your hostname or ip correctly, you'll get a
          false negative test.

        </para>

        <screen>[root@yourserver aolserver]# <userinput>lynx localhost:8000</userinput></screen>

        <para>

          You should see a &quot;Welcome to AOLserver&quot; page. If this
          doesn't work, try going to
          <computeroutput>http://127.0.0.1:8000/</computeroutput>. If this
          still doesn't work, check out the <xref
          linkend="install-aolserver-troubleshooting"/> section below.  Note that you will not be able to browse to the web page from another machine, because AOLserver is only listening to the local address.

        </para>

      <para>Shutdown the test server:</para>
      <screen>[root@yourserver aolserver]# <userinput>killall nsd</userinput>
[root@yourserver aolserver]#</screen>

        <para>

          The <computeroutput>killall</computeroutput> command will kill
          all processes with the name <computeroutput>nsd</computeroutput>,
          but clearly this is not a good tool to use for managing your
          services in general. We cover this topic in the <xref
          linkend="install-openacs-keepalive"/> section.

        </para>
    </listitem>

    <listitem id="install-aolserver-troubleshooting" xreflabel="Troubleshooting AOLserver">
    <para>Troubleshooting.</para>
      <para>If you can't view the welcome page, it's likely there's a
      problem with your server configuration. Start by viewing your
      AOLserver log, which is in
      <computeroutput>/usr/local/aolserver/log/server.log</computeroutput>.
      You should also try to find lines of the form:

    </para>
    <screen>
[01/Jun/2000:12:11:20][5914.2051][-nssock-] Notice: nssock: listening on http://localhost.localdomain:8000 (127.0.0.1:8000)
[01/Jun/2000:12:11:20][5914.2051][-nssock-] Notice: accepting connections</screen>

    <para>

      If you can find these lines, try entering the URL the server is
      listening on. If you cannot find these lines, there must be an error
      somewhere in the file. Search for lines beginning with the word
      <computeroutput>Error</computeroutput> instead of
      <computeroutput>Notice</computeroutput>.

    </para>

    <para>

      The <computeroutput>sample-config.tcl</computeroutput> file grabs
      your address and hostname from your OS settings.

    </para>

    <screen>
set hostname        [ns_info hostname]
set address         [ns_info address]</screen>

    <para>

      If you get an error that nssock can't get the requested address, you
      can set these manually. If you type 0.0.0.0, AOLserver will try to
      listen on all available addresses.  <emphasis>Note</emphasis>:
      <computeroutput>ns_info address</computeroutput> doesn't appear
      to be supported in current versions of AOLserver.

    </para>

    <screen>
set hostname        [ns_info hostname]
#set address         [ns_info address]
set address 0.0.0.0</screen>

    </listitem>
    
    <listitem id="analog-install">
      <para>OPTIONAL - install Analog web file analyser.  You should
have the <link linkend="analog-download">source tarball</link> in
<computeroutput>/tmp</computeroutput>.  Unpack, compile, and install analog.</para>
      <screen>[root@yourserver aolserver]# <userinput>cd /usr/local/src</userinput>
[root@yourserver src]# <userinput>tar xzf /tmp/analog-5.31.tar.gz</userinput>
root@yourserver analog-5.31]# <userinput>make</userinput>
cd src &amp;&amp; make
make[1]: Entering directory `/usr/local/src/analog-5.31/src'
<emphasis>(many lines omitted)</emphasis>
***IMPORTANT: You must read the licence before using analog
***
make[1]: Leaving directory `/usr/local/src/analog-5.31/src'
[root@yourserver analog-5.31]# <userinput>cd ..</userinput>
[root@yourserver src]#<userinput> mv analog-5.31 /usr/share/</userinput>
[root@yourserver src]#
<action>cd /usr/local/src
tar xzf /tmp/analog-5.31.tar.gz
cd analog-5.31
make
cd ..
mv analog-5.31 /usr/share/</action></screen>
    </listitem>
  </orderedlist>

  <para><phrase role="cvstag">($Id$)</phrase></para>

</sect1>
<!--
   Local Variables:
   sgml-parent-document: ("../index.xml" "book" "sect1")
   End:
-->
