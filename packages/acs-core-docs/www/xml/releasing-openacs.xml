<?xml version='1.0' ?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd" [

<!ENTITY % myvars SYSTEM "variables.ent">
%myvars;
]>

<appendix id="releasing-openacs">
  <title>How to package and release OpenACS</title>
    <orderedlist>
      <listitem>
        <para>update the version number in
          packages/acs-core-docs/www/xml/variables.ent, readme.txt,
          and all core .info files.  Regenerate the html documentation
          and commit all the changes.  Update the information in the
          packages/acs-core-docs/www/xml/for-everyone/release-notes.xml
          file.
        </para>
      </listitem>

      <listitem>
        <para>Check out the whole cvs tree.  The files must be checked
        out through a cvs account with write access and should be a
        checkout from the release branch.  In this example, the cvs
        user on openacs.org is implied from the ssh login information
        previously set up.  It could be overridden via
        <computeroutput>foobar@openacs.org</computeroutput>. </para>
        <screen><action>cd /var/tmp
cvs -d /cvsroot checkout -r <replaceable>oacs-5-0</replaceable> openacs-4</action>
</screen>
        <para>Repeat with the dotlrn cvs tree.</para>
        <screen><action>cd /var/tmp
mkdir dotlrn-packages
cd dotlrn-packages
cvs -d /dotlrn-cvsroot checkout -r <replaceable>dotlrn-2-0</replaceable> dotlrn-all
</action></screen>
      </listitem>
      <listitem>
        <para>Tag the tree.</para>
        <screen><action>cd /var/tmp/openacs-4
cvs tag -F <replaceable>openacs-5-0-0a1</replaceable>
</action></screen>
        <para>Tag dotLRN.  Since the dotLRN packages aren't all in one module, we iterate through all of the modules.  Log in first (cvs login) so that you don't have to log in for each module.</para>
        <screen><action>cd /var/tmp/dotlrn-packages
for dir in *; do ( cd $dir &amp;&amp; cvs tag -F <replaceable>dotlrn-2-0-0a1</replaceable> ); done
</action></screen>
      </listitem>
      <listitem>
        <para>Make the tarball</para>
        <itemizedlist>
          <listitem>
            <formalpara>
              <title>openacs-core</title>
              <para></para>
            </formalpara>
            <orderedlist>
              <listitem>
                <para>Go to a new working space and export the tagged files.</para>
            <screen><action>mkdir /var/tmp/tarball
cd /var/tmp/tarball
cvs -d :pserver:anonymous@openacs.org:/cvsroot export -r <replaceable>openacs-5-0-0a1</replaceable> acs-core
mv openacs-4 openacs
</action></screen>
              </listitem>
              <listitem>
                <para>Generate the tarball</para>
            <screen><action>cd /var/tmp/tarball
mv openacs openacs-<replaceable>5.0.0a1</replaceable>
tar cz -f <replaceable>openacs-5.0.0a1.tar.gz</replaceable> openacs-<replaceable>5.0.0a1</replaceable>
</action></screen>
              </listitem>
            </orderedlist>
          </listitem>
          <listitem>
            <formalpara>
              <title>dotlrn</title>
              <para></para>
            </formalpara>
            <orderedlist>
              <listitem>
                <para>Go to a new working space and export the tagged
                files. (was getting errors here trying to use -d, so
                gave up and just moved things from openacs-4 to
                openacs at the end)</para>
            <screen><action>mkdir /var/tmp/dotlrn-tarball
cd /var/tmp/dotlrn-tarball
cvs -d :pserver:anonymous@openacs.org:/cvsroot export \
  -r <replaceable>openacs-5-0-0a1</replaceable> acs-core
cd /var/tmp/dotlrn-tarball/openacs-4/packages
cvs -d :pserver:anonymous@openacs.org:/cvsroot export \
  -r <replaceable>openacs-5-0-0a1</replaceable> dotlrn-prereq
cvs -d :pserver:anonymous@dotlrn.openacs.org:/dotlrn-cvsroot export \
  -r <replaceable>dotlrn-2-0-0a1</replaceable> dotlrn-core
cd /var/tmp/dotlrn-tarball
mv openacs-4 openacs
</action></screen>
              </listitem>
              <listitem>
                <para>Copy the dotlrn install.xml file, which controls
                which packages are installed on setup, to the root
                location:</para>
                <screen><action>cp /var/tmp/dotlrn-tarball/openacs/packages/dotlrn/install.xml /var/tmp/dotlrn-tarball/openacs
</action></screen>
              </listitem>


              <listitem>
                <para>Generate the tarball</para>
            <screen><action>cd /var/tmp/tarball
mv openacs dotlrn-<replaceable>2.0.0a1</replaceable>
tar cz -f <replaceable>dotlrn-2.0.0a1.tar.gz</replaceable> dotlrn-<replaceable>2.0.0a1</replaceable>
</action></screen>
              </listitem>
            </orderedlist>
          </listitem>
        </itemizedlist>
      </listitem>
      <listitem>
        <para>Test the new tarball</para>
      </listitem>
      <listitem>
        <para>Update on the site</para>
      </listitem>
    </orderedlist>
    <orderedlist>
      <listitem>
        <para>
          Setup a local OpenACS server.
        </para>
      </listitem>
      <listitem>
        <para>
          Edit the file packages/acs-admin/www/build-repository.tcl; 
          Change the line with 'set head_channel' to '5-1' if the version on HEAD in the openacs.org cvs repository is 5.1. Etcetera.
          You may also want to change the line setting the variable 'repository_dir'.
        </para>
      </listitem>
      <listitem>
        <para>
          Request /acs-admin/apm/build-repository on your new server.
        </para>
      </listitem>
      <listitem>
        <para>
          The page will find all branches in the cvs repository
          labeled oacs-x-y, and build a repository channel for each of
          those branches where x>=5 (so not for 4.6 and
          earlier). Finally, it'll build another channel for HEAD,
          which will be named after what you set in 'head_channel'
          above.
        </para>
      </listitem>
      <listitem>
        <para>
          For each channel, it'll do an anonymous checkout of packges and contrib/packages, then build .apm files for each package in the checkout.
        </para>
      </listitem>
      <listitem>
        <para>
          The files will be stored on the server's hard drive in the directory specified by the 'repository_dir' variable in the page script, by default "[acs_root_dir]/www/repository/".
        </para>
      </listitem>
      <listitem>
        <para>
          If you're on openacs.org, everything should now be fine. Otherwise, you need to move the entire directory tree to openacs.org:/web/openacs/www/repository, replacing what was already there.
        </para>
      </listitem>
    </orderedlist>
  </appendix>
