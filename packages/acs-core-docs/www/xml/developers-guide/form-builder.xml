<?xml version='1.0' ?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd" [
<!ENTITY % myvars SYSTEM "../variables.ent">
%myvars;
]>
<sect1 id="form-builder">
<title>Using HTML Forms</title>

<sect2 id="ad-form-overview">
<title>Overview</title>

</sect2>

  <sect2 id="multi-part-elements">
    <title>Multi-part Elements</title>
    <para>Some elements have more than one choice, or can submit more than one value.</para>
    <sect3>
      <title>SELECT elements</title>
      <orderedlist>
        <listitem>
          <formalpara>
            <title>Creating the form element</title>
            <para>Populate a list of lists with values for the option list.</para>
          </formalpara>
          <programlisting>set foo_options [db_list_of_lists foo_option_list "
    select foo,
           foo_id
      from foos
"]
</programlisting>
          <para>The variable <computeroutput>foo_options</computeroutput> should resemble <computeroutput>{{first foo} 1234} {{second foo} 1235}
</computeroutput></para>
          <para>Within ad_form, set up the element to use this list:</para>
          <programlisting>{foo:text(select)
        {label "Which Foo"}
        {options $foo_options}
    }</programlisting>
          <para>This will result in a single name/value pair coming back in the submitted form.  Handle this within the same ad_form structure, in the <computeroutput>-new_data</computeroutput> and <computeroutput>-edit_data</computeroutput>.  In the example, it is available as <computeroutput>$foo</computeroutput></para>
        </listitem>
      </orderedlist>
        <para>See also the 
        <ulink url="http://www.w3.org/TR/html401/interact/forms.html#h-17.6">W3C spec for "The SELECT, OPTGROUP, and OPTION elements"</ulink>.
        </para>
    </sect3>
  </sect2>
<para><phrase role="cvstag">($Id$)</phrase></para>
</sect1>
